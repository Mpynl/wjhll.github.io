<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>十八、常用文本查看head、tail等</title>
      <link href="/2020/04/05/%E5%8D%81%E5%85%AB%E3%80%81%E5%B8%B8%E7%94%A8%E6%96%87%E6%9C%AC%E6%9F%A5%E7%9C%8Bhead%E3%80%81tail%E7%AD%89/"/>
      <url>/2020/04/05/%E5%8D%81%E5%85%AB%E3%80%81%E5%B8%B8%E7%94%A8%E6%96%87%E6%9C%AC%E6%9F%A5%E7%9C%8Bhead%E3%80%81tail%E7%AD%89/</url>
      
        <content type="html"><![CDATA[<h2 id="文件查看"><a href="#文件查看" class="headerlink" title="文件查看"></a>文件查看</h2><h3 id="文件查看命令："><a href="#文件查看命令：" class="headerlink" title="文件查看命令："></a>文件查看命令：</h3><p>&emsp;&emsp;&emsp;&emsp;cat，tac，rev<br><br>&emsp;&emsp;cat [OPTION]…[FILE]…<br><br>&emsp;&emsp;&emsp;&emsp;-E: 显示行结束符$<br><br>&emsp;&emsp;&emsp;&emsp;-n: 对显示出的每一行进行编号<br><br>&emsp;&emsp;&emsp;&emsp;-A：显示所有控制符<br><br>&emsp;&emsp;&emsp;&emsp;-b：非空行编号<br><br>&emsp;&emsp;&emsp;&emsp;-s：压缩连续的仝行成一行<br><br>&emsp;&emsp;tac<br><br>&emsp;&emsp;rev<br></p><h3 id="分页查看文件内容"><a href="#分页查看文件内容" class="headerlink" title="分页查看文件内容"></a>分页查看文件内容</h3><p>&emsp;&emsp;more:分页查看文件<br><br>&emsp;&emsp;&emsp;&emsp;<code>more [OPTIONS...] FILE...</code><br><br>&emsp;&emsp;&emsp;&emsp;-d:显示翻页及退出提示<br><br>&emsp;&emsp;less：一页一页地查看文件或STDIN输出<br><br>&emsp;&emsp;查看时有用的命令包括:<br><br>&emsp;&emsp;&emsp;&emsp;/文本搜索  &emsp;&emsp;文本<br><br>&emsp;&emsp;&emsp;&emsp;n/N 跳到下一个或上一个配<br><br>&emsp;&emsp;less 命令是man命令使用的分页器<br></p><h3 id="显示文本前或文本后内容"><a href="#显示文本前或文本后内容" class="headerlink" title="显示文本前或文本后内容"></a>显示文本前或文本后内容</h3><p>&emsp;&emsp;head [OPTION]…[FILE]…<br><br>&emsp;&emsp;&emsp;&emsp;-c #：指定获取前#字节<br><br>&emsp;&emsp;&emsp;&emsp;-n #：指定获取前#行<br><br>&emsp;&emsp;&emsp;&emsp;- #：指定行数<br><br>&emsp;&emsp;<code>tail [OPTION]...[FILE]...</code><br><br>&emsp;&emsp;&emsp;&emsp;-c #：指定获取后#字节<br><br>&emsp;&emsp;-n #：指定获取后#行<br><br>&emsp;&emsp;- #：<br><br>&emsp;&emsp;&emsp;&emsp;-f:跟踪显示文件fd新追加的内容，常用日志监控，相当于 –follow=descriptor<br><br>&emsp;&emsp;&emsp;&emsp;-F：跟踪文件名相当于–follow=name–retry<br><br>&emsp;&emsp;tailf类似tail-f，当文件不增长时并不访问文件<br></p><h3 id="按列抽取文件cut和合并文件paste"><a href="#按列抽取文件cut和合并文件paste" class="headerlink" title="按列抽取文件cut和合并文件paste"></a>按列抽取文件cut和合并文件paste</h3><p>&emsp;&emsp;<code>cut [OPTION]...[FILE]...</code><br><br>&emsp;&emsp;&emsp;&emsp;-d DELIMITER:指明分隔符，默认tab<br><br>&emsp;&emsp;&emsp;&emsp;<code>-f FILEDS:</code><br><br>&emsp;&emsp;&emsp;&emsp;#：第#个字段<br><br>&emsp;&emsp;&emsp;&emsp;#，#[，#]：离散的多个字段，例如1，3，6<br><br>&emsp;&emsp;&emsp;&emsp;#-#：连续的多个字段，例如1-6<br><br>&emsp;&emsp;&emsp;&emsp;混合使用：1-3，7<br><br>&emsp;&emsp;&emsp;&emsp;-c 按字符切割<br><br>&emsp;&emsp;&emsp;&emsp;–output-delimiter=STRING指定输出分隔符<br></p><h3 id="文本分析工具"><a href="#文本分析工具" class="headerlink" title="文本分析工具"></a>文本分析工具</h3><p>&emsp;&emsp;文本数据统计：wc<br><br>&emsp;&emsp;整理文本：sort<br><br>&emsp;&emsp;比较文件：diff和patch<br></p><h3 id="收集文本统计工具wc"><a href="#收集文本统计工具wc" class="headerlink" title="收集文本统计工具wc"></a>收集文本统计工具wc</h3><p>&emsp;&emsp;计数单词总数、行总数、字节总数和字符总数<br><br>&emsp;&emsp;可以对文件或STDIN中的数据运行<br><br>&emsp;&emsp;&emsp;&emsp;<code>wc story.txt</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>39 237 1901 stOry.txt</code><br><br>&emsp;&emsp;&emsp;&emsp;行数 字数 字节数<br></p><h4 id="常用选项"><a href="#常用选项" class="headerlink" title="常用选项"></a>常用选项</h4><p>&emsp;&emsp;-l 只计数行数<br><br>&emsp;&emsp;-w 只计数单词总数<br><br>&emsp;&emsp;-c 只计数字节总数<br><br>&emsp;&emsp;-m 只计数字符总数<br><br>&emsp;&emsp;-L显示文件中最长行的长度<br></p><h3 id="文本排序sort"><a href="#文本排序sort" class="headerlink" title="文本排序sort"></a>文本排序sort</h3><p>&emsp;&emsp;把整理过的文本显示在STDOUT，不改变原始文件<br><br>&emsp;&emsp;&emsp;&emsp;<code>sort [options] file(s)</code><br></p><h4 id="常用选项-1"><a href="#常用选项-1" class="headerlink" title="常用选项"></a>常用选项</h4><p>&emsp;&emsp;-r执行反方向（由上至下）整理<br><br>&emsp;&emsp;-R随机排序<br><br>&emsp;&emsp;-n执行按数字大小整理<br><br>&emsp;&emsp;-f选项忽略（fold）字符串中的字符大小写<br><br>&emsp;&emsp;-u选项（独特，unique）删除输出中的重复行<br><br>&emsp;&emsp;-t c选项使用c做为字段界是符<br><br>&emsp;&emsp;-k X 选项按照使用c字符分隔的X列来整理能够使用多次<br></p><h4 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h4><p>&emsp;&emsp;uniq命令：从输入中删除前后相接的重复的行<br><br>&emsp;&emsp;<code>uniq [OPTION]...[FILEJ...</code><br><br>&emsp;&emsp;&emsp;&emsp;-c:显示每行重复出现的次数<br><br>&emsp;&emsp;&emsp;&emsp;-d:仅显示重复过的行<br><br>&emsp;&emsp;&emsp;&emsp;-u:仅显示不曾重复的行<br><br>&emsp;&emsp;&emsp;&emsp;注：连续且完全相同方为重复<br><br>&emsp;&emsp;常和sort命令一起配合使用<br><br>&emsp;&emsp;<code>sort userlist.txt | uniq -c</code><br></p><h4 id="比较文件"><a href="#比较文件" class="headerlink" title="比较文件"></a>比较文件</h4><p>&emsp;&emsp;比较两个文件之间的区别<br><br>&emsp;&emsp;<code>diff foo.conf foo2.conf</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>5c5</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>&lt;use_widgets = no</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>---</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>&gt;use_widgets = yes</code><br><br>&emsp;&emsp;注明第5行有区别（改变）<br></p><h3 id="复制对文件改变patch"><a href="#复制对文件改变patch" class="headerlink" title="复制对文件改变patch"></a>复制对文件改变patch</h3><p>&emsp;&emsp;diff  命令的输出被保存在一种叫做”补丁”的文件中<br><br>&emsp;&emsp;使用 –u 选项来输出”统一的（unified）”diff格式文件，最适用于补丁文件<br><br>&emsp;&emsp;patch  复制在其它文件中进行的改变（要谨慎使用）<br><br>&emsp;&emsp;适用 –b 选项来自动备份改变了的文件<br><br>&emsp;&emsp;&emsp;&emsp;<code>$diff –u f00.conf foo2.conf&gt;foo.patch</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>$patch-b foo.conf foo.patch</code><br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十七、Linux文件执行、读写权限管理</title>
      <link href="/2020/04/04/%E5%8D%81%E4%B8%83%E3%80%81Linux%E6%96%87%E4%BB%B6%E6%89%A7%E8%A1%8C%E3%80%81%E8%AF%BB%E5%86%99%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
      <url>/2020/04/04/%E5%8D%81%E4%B8%83%E3%80%81Linux%E6%96%87%E4%BB%B6%E6%89%A7%E8%A1%8C%E3%80%81%E8%AF%BB%E5%86%99%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="十七、Linux文件执行、读写权限管理"><a href="#十七、Linux文件执行、读写权限管理" class="headerlink" title="十七、Linux文件执行、读写权限管理"></a>十七、Linux文件执行、读写权限管理</h2><h3 id="权限设置相关命令"><a href="#权限设置相关命令" class="headerlink" title="权限设置相关命令"></a>权限设置相关命令</h3><p>&emsp;&emsp;chmod 可以对文件进行修改权限操作。命令格式：chmod + 用户+权限<br><br>&emsp;&emsp;chown 可以修改文件的所有者和所有组。chown + 权限+用户名:组 + 文件<br><br>&emsp;&emsp;chmod 也可以使用数字代表相关权限，r:4 , w:2 ,x 1,chmod 764 代表的权限就是：rwx rw- x–-<br></p><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><p>&emsp;&emsp;文件属性<br><br><img src="http://i2.tiimg.com/709978/7914f969a2eb418a.png" alt=""><br>&emsp;&emsp;文件属性操作<br><br>&emsp;&emsp;&emsp;&emsp;多chown设置文件的所有者<br><br>&emsp;&emsp;&emsp;&emsp;多chgrp设置文件的属组信息<br></p><h3 id="修改文件属主和属组"><a href="#修改文件属主和属组" class="headerlink" title="修改文件属主和属组"></a>修改文件属主和属组</h3><p>&emsp;&emsp;修改文件的属主chown<br><br>&emsp;&emsp;&emsp;&emsp;<code>chown [OPTION]...[OWNER]:[GROUP]] FILE…</code><br><br>&emsp;&emsp;用法：<br><br>&emsp;&emsp;&emsp;&emsp;<code>OWNER</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>OWNER: GROUP</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>:GROUP</code><br><br>&emsp;&emsp;&emsp;&emsp;命令中的冒号可用.替换<br><br>&emsp;&emsp;&emsp;&emsp;-R: 递归<br><br>&emsp;&emsp;&emsp;&emsp;<code>chown [OPTIONJ...   --reference=RFILE FILE…</code><br><br>&emsp;&emsp;修改文件的属组：chgrp<br><br>&emsp;&emsp;&emsp;&emsp;<code>chgrp [OPTIONJ...GROUPFILE…</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>chgrp [OPTION]...--reference=RFILEFILE…</code><br><br>&emsp;&emsp;&emsp;&emsp;-R递归<br></p><h3 id="文件权限-1"><a href="#文件权限-1" class="headerlink" title="文件权限"></a>文件权限</h3><p>&emsp;&emsp;文件的权限主要针对三类对象进行定义<br><br>&emsp;&emsp;&emsp;&emsp;owner: 属主，u<br><br>&emsp;&emsp;&emsp;&emsp;group: 属组，g<br><br>&emsp;&emsp;&emsp;&emsp;other: 其他，0<br><br>&emsp;&emsp;每个文件针对每类访问者都定义了三种权限<br><br>&emsp;&emsp;&emsp;&emsp;r: Readable<br><br>&emsp;&emsp;&emsp;&emsp;w: Writable<br><br>&emsp;&emsp;&emsp;&emsp;x：eXcutable<br><br>&emsp;&emsp;文件: <br><br>&emsp;&emsp;&emsp;&emsp;r: 可使用文件查看类工具获取其内容<br><br>&emsp;&emsp;&emsp;&emsp;w: 可修改其内容<br><br>&emsp;&emsp;&emsp;&emsp;x：可以把此文件提请内核启动为一个进程<br><br>&emsp;&emsp;目录:<br><br>&emsp;&emsp;&emsp;&emsp;r: 可以使用ls查看此目录中文件列表<br><br>&emsp;&emsp;&emsp;&emsp;w: 可在此目录中创建文件，也可删除此目录中的文件<br><br>&emsp;&emsp;&emsp;&emsp;x: 可以使用ls -l查看此目录中文件列表，可以cd进入此目录<br><br>&emsp;&emsp;&emsp;&emsp;X：只给目录x权限，不给文件x权限</p><h3 id="文件权限操作"><a href="#文件权限操作" class="headerlink" title="文件权限操作"></a>文件权限操作</h3><p>&emsp;&emsp;文件权限（rwx|X）<br><br><img src="http://i1.fuimg.com/709978/7efb9714e58a3fa9.png" alt=""><br></p><h3 id="文件权限操作命令"><a href="#文件权限操作命令" class="headerlink" title="文件权限操作命令"></a>文件权限操作命令</h3><p>&emsp;&emsp;chmod<br></p><h3 id="八进制数字"><a href="#八进制数字" class="headerlink" title="八进制数字"></a>八进制数字</h3><p>&emsp;&emsp;<code>--- 000 0</code><br><br>&emsp;&emsp;<code>--x 001 1</code><br><br>&emsp;&emsp;<code>-w- 010 2</code><br><br>&emsp;&emsp;<code>-wx 011 3</code><br><br>&emsp;&emsp;<code>r-- 100 4</code><br><br>&emsp;&emsp;<code>r-x 101 5</code><br><br>&emsp;&emsp;<code>rw- 110 6</code><br><br>&emsp;&emsp;<code>rwx 111 7</code><br><br>&emsp;&emsp;例如：<br><br>&emsp;&emsp;&emsp;&emsp;<code>640: rw-r-----&lt;br&gt;</code><br>&emsp;&emsp;&emsp;&emsp;<code>755: rwxr-xr-x&lt;br&gt;</code></p><h3 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h3><p>&emsp;&emsp;<code>chmod [OPTION]… OCTAL-MODE FILE…</code><br><br>&emsp;&emsp;&emsp;&emsp;-R: 递归修改权限<br><br>&emsp;&emsp;&emsp;&emsp;<code>chmod [OPTION]...MODE[,MODE]...FILE..</code><br><br>&emsp;&emsp;MODE:<br><br>&emsp;&emsp;修改一类用户的所有权限:<br><br>&emsp;&emsp;u=&emsp;&emsp; g=&emsp;&emsp; o=&emsp;&emsp; ug=&emsp;&emsp; a=&emsp;&emsp; u=&emsp;&emsp;,g=&emsp;&emsp;<br><br>&emsp;&emsp;修改一类用户某位或某些位权限<br><br>&emsp;&emsp;u+&emsp;&emsp; u-&emsp;&emsp; g+&emsp;&emsp; g-&emsp;&emsp; o+&emsp;&emsp; o-&emsp;&emsp; a+&emsp;&emsp; a-&emsp;&emsp; +&emsp;&emsp; - <br><br>&emsp;&emsp;<code>chmod [OPTION]...--reference=RFIL EFILE…</code><br><br>&emsp;&emsp;&emsp;&emsp;参考RFILE文件的权限，将FILE的修改为同RFILE<br></p><h3 id="权限设置示例"><a href="#权限设置示例" class="headerlink" title="权限设置示例"></a>权限设置示例</h3><p>&emsp;&emsp;<code>chgrp sales testfile</code><br><br>&emsp;&emsp;<code>chownm root:admins testfile</code><br><br>&emsp;&emsp;<code>chmod u+wx,g-r,o=rx file</code><br><br>&emsp;&emsp;<code>chmod –R g+rwX/textdir</code><br><br>&emsp;&emsp;<code>chmd 600 file</code><br><br>&emsp;&emsp;<code>chown mage testfile</code><br></p><h3 id="新建文件和目录的默认权限"><a href="#新建文件和目录的默认权限" class="headerlink" title="新建文件和目录的默认权限"></a>新建文件和目录的默认权限</h3><p>&emsp;&emsp;umask值可以用来保留在创建文件权限<br><br>&emsp;&emsp;新建FILE权：666-umask<br><br>&emsp;&emsp;&emsp;&emsp;如果所得结果某位存在执行（奇数）权限，则将其权限+1<br><br>&emsp;&emsp;新建DIR权限：777-umask<br><br>&emsp;&emsp;非特权用户umask是002<br><br>&emsp;&emsp;root的umask是022<br><br>&emsp;&emsp;umask：查看<br><br>&emsp;&emsp;umask#：设定<br><br>&emsp;&emsp;&emsp;&emsp;umask 002<br><br>&emsp;&emsp;umask -S模式方式显示<br><br>&emsp;&emsp;umask -P 输出可被调用<br><br>&emsp;&emsp;全局设置/etc/bashrc用户设置：～/.bashrc<br></p><h3 id="Linux-文件系统上的特殊权限"><a href="#Linux-文件系统上的特殊权限" class="headerlink" title="Linux 文件系统上的特殊权限"></a>Linux 文件系统上的特殊权限</h3><p>&emsp;&emsp;<code>SUID,SGID,Sticky</code><br><br>&emsp;&emsp;<code>三种常用权限：r,w,x,user,group,other</code><br><br>&emsp;&emsp;安全上下文<br><br>&emsp;&emsp;前提：进程有属主和属组；文件有属主和属组<br><br>&emsp;&emsp;（1）任何一个可执行程序文件能不能启动为进程，取决发起者对程序文件是否拥有执行权限<br><br>&emsp;&emsp;（2）启动为进程之后，其进程的属主为发起者，进程的属组为发起者所属的组<br><br>&emsp;&emsp;（3）进程访问文件时的权限，取决于进程的发起者<br><br>&emsp;&emsp;&emsp;&emsp;(a)进程的发起者，同文件的属主：则应用文件属主权限<br><br>&emsp;&emsp;&emsp;&emsp;(b)进程的发起者属于文件属组；则应用文件属组权限<br><br>&emsp;&emsp;&emsp;&emsp;(c)应用文件”其它”权限<br></p><h3 id="可执行文件suid权限"><a href="#可执行文件suid权限" class="headerlink" title="可执行文件suid权限"></a>可执行文件suid权限</h3><p>&emsp;&emsp;任何一个可执行程序文件能不能启动为进程：取决发起者对程序文件是否拥有执行权限<br><br>&emsp;&emsp;启动为进程之后，其进程的属主为原程序文件的属主<br><br>&emsp;&emsp;SUID只对二进制可执行程序有效<br><br>&emsp;&emsp;SUID设置在目录上无意义<br><br>&emsp;&emsp;权限设定：<br><br>&emsp;&emsp;&emsp;&emsp;<code>chmod u+s FILE…</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>chmod u-s FILE…</code><br></p><h3 id="可执行文件sgid权限"><a href="#可执行文件sgid权限" class="headerlink" title="可执行文件sgid权限"></a>可执行文件sgid权限</h3><p>&emsp;&emsp;任何一个可执行程序文件能不能启动为进程：取决发起者对程序文件是否拥有执行权限<br><br>&emsp;&emsp;启动为进程之后，其进程的属组为原程序文件的属组<br><br>&emsp;&emsp;权限设定：<br><br>&emsp;&emsp;&emsp;&emsp;<code>chmod g+s FILE…</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>chmod g-s FILE…</code><br></p><h3 id="目录上的sgid权限"><a href="#目录上的sgid权限" class="headerlink" title="目录上的sgid权限"></a>目录上的sgid权限</h3><p>&emsp;&emsp;默认情况下，用户创建文件时，其属组为此用户所属的主组<br><br>&emsp;&emsp;一旦某目录被设定了SGID，则对此目录有写权限的用户在此目录中创建的文件所属的组为此目录的属组<br><br>&emsp;&emsp;通常用于创建一个协作目录<br><br>&emsp;&emsp;权限设定:<br><br>&emsp;&emsp;&emsp;&emsp;<code>chmod g+s DIR…</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>chmod g-s DIR…</code><br></p><h3 id="Sticky-位"><a href="#Sticky-位" class="headerlink" title="Sticky 位"></a>Sticky 位</h3><p>&emsp;&emsp;具有写权限的目录通常用户可以删除该目录中的任何文件，无论该文件的权限或拥有权<br><br>&emsp;&emsp;在目录设置Sticky位，只有文件的所有者或root可以删除该文件<br><br>&emsp;&emsp;sticky设置在文件上无意义<br><br>&emsp;&emsp;权限设定<br><br>&emsp;&emsp;&emsp;&emsp;<code>chmod o+t DIR…</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>chmod o-t DIR…</code><br><br>&emsp;&emsp;例如<br><br>&emsp;&emsp;&emsp;&emsp;<code>ls -ld /tmp drwxrwxrwt 12 root root 4096 Nov 2 15：44/tmp</code><br></p><h3 id="特殊权限数字"><a href="#特殊权限数字" class="headerlink" title="特殊权限数字"></a>特殊权限数字</h3><p>&emsp;&emsp;SUID SGID STICKY<br><br>&emsp;&emsp;&emsp;&emsp;<code>000 0</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>001 1</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>010 2</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>011 3</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>100 4</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>101 5</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>110 6</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>111 7</code><br><br>&emsp;&emsp;<code>chmod 4777 /tmp/a.txt</code><br></p><h3 id="权限位映射"><a href="#权限位映射" class="headerlink" title="权限位映射"></a>权限位映射</h3><p>&emsp;&emsp;SUID: user,占据属主的执行权限位<br><br>&emsp;&emsp;&emsp;&emsp;s: 属主拥有x权限<br><br>&emsp;&emsp;S: 属主没有x权限<br><br>&emsp;&emsp;SGID: group,占据属组的执行权限位<br><br>&emsp;&emsp;&emsp;&emsp;s: group拥有x权限<br><br>&emsp;&emsp;&emsp;&emsp;S: group没有x权限<br><br>&emsp;&emsp;Sticky: other,占据other的执行权限位<br><br>&emsp;&emsp;&emsp;&emsp;t: other拥有x权限<br><br>&emsp;&emsp;&emsp;&emsp;T：other没有x权限<br></p><h3 id="设定文件特定权限"><a href="#设定文件特定权限" class="headerlink" title="设定文件特定权限"></a>设定文件特定权限</h3><p>&emsp;&emsp;chattr +i不能删除，改名，更改<br><br>&emsp;&emsp;chattr +a只能追加内容<br><br>&emsp;&emsp;lsattr显示特定属性<br></p><h3 id="访问控制列表"><a href="#访问控制列表" class="headerlink" title="访问控制列表"></a>访问控制列表</h3><p>&emsp;&emsp;ACL：Access Control List，实现灵活的权限管理<br><br>&emsp;&emsp;除了文仵的所有者，所属组和其它人，可以对更多的用户设置权限<br><br>&emsp;&emsp;CentOS7默认创建的xfs和ext4文件系统具有ACL功能<br><br>&emsp;&emsp;CentOS7之前版本，默认手工创建的ext4文件系统无ACL功能，需手动增加<br><br>&emsp;&emsp;&emsp;&emsp;<code>tune2fs –o acl/dev/sdb1</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>mount –o acl/dev/sdbl /mnt/test</code><br><br>&emsp;&emsp;ACL生效顺序: 所有者，自定义用户，自定义组，其他人<br></p><h3 id="访问控制列表-1"><a href="#访问控制列表-1" class="headerlink" title="访问控制列表"></a>访问控制列表</h3><p>&emsp;&emsp;为多用户或者组的文件和目录赋予访问权限rwx<br><br>&emsp;&emsp;<code>mount –o acl/directory</code><br><br>&emsp;&emsp;<code>getfacl file | directory</code><br><br>&emsp;&emsp;<code>setfacl –m u:wang:rwx file | directory</code><br><br>&emsp;&emsp;<code>setfacl –Rm g:sales:rwX directory</code><br><br>&emsp;&emsp;<code>setfacl  -M file.acl file directory</code><br><br>&emsp;&emsp;<code>setfacl  -m g:salesgroup:rw file | directory</code><br><br>&emsp;&emsp;<code>setfacl –m d:u:wang:rx directory</code><br><br>&emsp;&emsp;<code>setfacl –x u:wang file | directory</code><br><br>&emsp;&emsp;<code>setfacl  -X file.acl directory</code><br><br>&emsp;&emsp;ACL文件上的group权限是mask值（自定义用户，自定义组，拥有组的最大权限），而非传统的组权限<br><br>&emsp;&emsp;getfacl可看到特殊权限：flags<br><br>&emsp;&emsp;通过ACL赋予目录默认x权限，目录内文件也不会继承x权限<br><br>&emsp;&emsp;<code>base ACL不能删除</code><br><br>&emsp;&emsp;<code>setfacl –k dir删除默认ACL权限</code><br><br>&emsp;&emsp;<code>setfacl –b file1清除所有ACL权限</code><br><br>&emsp;&emsp;<code>getfacl filel|setfacl --set-file= -file2复制file1的acl权限给file2</code><br><br>&emsp;&emsp;mask只影响除所有者和other的之外的人和组的最大权限<br><br>&emsp;&emsp;Mask需要与用户的权限进行逻辑与运算后，才能变成有限的权限（Effective Permission）<br><br>&emsp;&emsp;&emsp;&emsp;用户或组的设置必须存在于mask权限设定范围内才会生效setfacl-m mask::rx file<br><br>&emsp;&emsp;–set选项会把原有的ACLI.页都删除，用新的替代，需要注意的是一定要包含UGO的设置，不能象-m一样只是添加ACL就可以<br><br>&emsp;&emsp;示例：<br><br>&emsp;&emsp;&emsp;&emsp;<code>setfacl –set u::rw,u:wang:rw,g::r,o::-file1</code><br><br>&emsp;&emsp;备份和恢复ACL<br><br>&emsp;&emsp;主要的文件操作命令cp和mv都支持ACL，只是印命令需要加上 -p参数。但是tar等常见的备份工具是不会保留目录和文件的ACL信息<br><br>&emsp;&emsp;<code>getfacl -R/tmp/dirl&gt;acl.txt</code><br><br>&emsp;&emsp;<code>setfacl-R -b/tmp/dirl</code><br><br>&emsp;&emsp;<code>setfacl-R --set-file=acl.txt /tmp/dir1</code><br><br>&emsp;&emsp;<code>setfacl—restore acl.txt</code><br><br>&emsp;&emsp;<code>getfacl-R /tmp/dir1</code><br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十六、Linux用户权限设置及企业管理</title>
      <link href="/2020/03/29/%E5%8D%81%E5%85%AD%E3%80%81Linux%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE%E5%8F%8A%E4%BC%81%E4%B8%9A%E7%AE%A1%E7%90%86/"/>
      <url>/2020/03/29/%E5%8D%81%E5%85%AD%E3%80%81Linux%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE%E5%8F%8A%E4%BC%81%E4%B8%9A%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>&emsp;&emsp;vipw和vigr<br><br>&emsp;&emsp;pwck和grpck<br><br>&emsp;&emsp;vipw命令相当于nano /etc/passwd,用于更改用户密码<br><br>&emsp;&emsp;vigr命令相当于nano /etc/group,用于更改组的相关文件<br><br>&emsp;&emsp;pwck 命令用于检查用户密码的配置格式是否正确<br><br>&emsp;&emsp;grpck 用于检查组的配置文件的格式的正确性。<br><br>&emsp;&emsp;一般情况下不建议直接更改用于配置命令。我们推荐通过以下的几条命令来更改相关配置。<br></p><h2 id="用户和组的配置文件"><a href="#用户和组的配置文件" class="headerlink" title="用户和组的配置文件"></a>用户和组的配置文件</h2><p>&emsp;&emsp;用户管理命令<br><br>&emsp;&emsp;&emsp;&emsp;／useradd<br><br>&emsp;&emsp;&emsp;&emsp;／usermod<br><br>&emsp;&emsp;&emsp;&emsp;／userdel<br><br>&emsp;&emsp;组帐号维护命令<br><br>&emsp;&emsp;&emsp;&emsp;groupadd<br><br>&emsp;&emsp;&emsp;&emsp;groupmod<br><br>&emsp;&emsp;&emsp;&emsp;groupdel<br><br>&emsp;&emsp;查看某一用户的相关信息可以使用命令getnet passwd +用户名。<br></p><h2 id="用户创建"><a href="#用户创建" class="headerlink" title="用户创建"></a>用户创建</h2><p>&emsp;&emsp;<code>useradd [options] LOGIN</code><br><br>&emsp;&emsp;<code>-u UID</code><br><br>&emsp;&emsp;<code>-o配合-u选项，不检查UID的唯一性</code><br><br>&emsp;&emsp;<code>-g GID：指明用户所属基本组，可为组名，也可以GID</code><br><br>&emsp;&emsp;<code>-c &quot;COMMENT&quot;：用户的注释信息</code><br><br>&emsp;&emsp;<code>-d HOME-DIR.以指定的路径（不存在）为家目录</code><br><br>&emsp;&emsp;<code>-s SHELL:指明用户的默认shell程序</code><br><br>&emsp;&emsp;&emsp;&emsp;可用列表在/etc/shells文件中<br><br>&emsp;&emsp;<code>-G GROUP1[,GROUP2,...]：为用户指明附加组，组须事先存在</code><br><br>&emsp;&emsp;<code>-N不创建私用组做主组，使用users组做主组</code><br><br>&emsp;&emsp;<code>-r：创建系统用户CentOS6：ID&lt;500，CentOS7：ID&lt;1000</code><br><br>&emsp;&emsp;<code>-m创建家目录，用于系统用户</code><br><br>&emsp;&emsp;<code>-M不创建家目录，用于非系统用户</code><br><br>&emsp;&emsp;默认值设定：/etc/default/useradd文件中<br></p><h2 id="显示或更改默认设置"><a href="#显示或更改默认设置" class="headerlink" title="显示或更改默认设置"></a>显示或更改默认设置</h2><p>&emsp;&emsp;<code>useradd -D</code><br><br>&emsp;&emsp;<code>useradd –D –s SHELL</code><br><br>&emsp;&emsp;<code>useradd –D -b BASE_DIR</code><br><br>&emsp;&emsp;<code>useradd –D –g GROUP</code><br></p><h2 id="新建用户的相关文件和命令"><a href="#新建用户的相关文件和命令" class="headerlink" title="新建用户的相关文件和命令"></a>新建用户的相关文件和命令</h2><p>&emsp;&emsp;/etc/default/useradd<br><br>&emsp;&emsp;/etc/skel/*<br><br>&emsp;&emsp;/etc/login.defs<br><br>&emsp;&emsp;newusers passwd 格式文件批量创建用户<br><br>&emsp;&emsp;chpasswd 批量修改用户口令<br></p><h2 id="用户属性修改"><a href="#用户属性修改" class="headerlink" title="用户属性修改"></a>用户属性修改</h2><p>&emsp;&emsp;<code>usermod [OPTION] login</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-u UID: 新UID</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-g GID: 新主组</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-G GROUP1[,GROUP2,...[,GROUPN]]]：新附加组，原来的附加组将会被覆盖</code><br><br>&emsp;&emsp;若保留原有，则要同时使用 -a选项<br><br>&emsp;&emsp;&emsp;&emsp;<code>-s SHELL：新的默认SHELL</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-c OMMENT&#39;：新的注释信息</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-d HOME: 新家目录不会自动创建，若要创建新家目录并移动原家数据，同时使用-m选项</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-l login-name: 新的名字</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-L: lock指定用户，在/etc/shadow密码栏的增加！</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-U: unlock指定用户，将/etc/shadow密码栏的！拿掉</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-e YYYY-MM-DD: 指明用户账号过期日期</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-f INACTIVE: 设定非活动期限</code><br></p><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><p>&emsp;&emsp;userdel[OPTION]…login<br><br>&emsp;&emsp;&emsp;&emsp;<code>-r:删除用户家目录</code><br></p><h3 id="查看用户相关的ID信息"><a href="#查看用户相关的ID信息" class="headerlink" title="查看用户相关的ID信息"></a>查看用户相关的ID信息</h3><p>&emsp;&emsp;id [OPTION]…[USER]<br><br>&emsp;&emsp;&emsp;&emsp;<code>-u：显示UID</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-g: 显示GID</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-G:显示用户所属的组的ID</code><br><br> &emsp;&emsp;&emsp;&emsp;<code>-n:显示名称，需配合ugG使用</code><br></p><h3 id="切换命令或以其他用户身份执行命令"><a href="#切换命令或以其他用户身份执行命令" class="headerlink" title="切换命令或以其他用户身份执行命令"></a>切换命令或以其他用户身份执行命令</h3><p>&emsp;&emsp;<code>su[options...][-][user[args...]]</code><br><br>&emsp;&emsp;切换用户的方式<br><br>&emsp;&emsp;&emsp;&emsp;<code>su UserName：非登录式切换，即不会读取目标用户的配置文件，不改变当前工作目录</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>su -UserName：登录式切换，会读取目标用户的配置文件，切换至家目录，完全切换</code><br><br>&emsp;&emsp;root su至其他用户无须密码；非root用户切换时需要密码<br><br>&emsp;&emsp;换个身份执行命令：<br><br>&emsp;&emsp;&emsp;&emsp;<code>su[-]UserName –c COMMAND</code><br><br>&emsp;&emsp;选项：-l    –login<br><br>&emsp;&emsp;&emsp;&emsp;<code>su -| UserName相当于su - UserName</code><br></p><h2 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h2><p>&emsp;&emsp;passwd [OPTIONS] UserName: 修改指定用户的密码<br><br>&emsp;&emsp;常用选项: <br><br>&emsp;&emsp;&emsp;&emsp;<code>-d：删除指定用户密码</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-l：锁定指定用户</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-u：解锁指定用户</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-e：强制用户下次登录修改密码</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-f: 强制操作</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-n mindays: 指定最短使用期限</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-x maxdays: 最大使用期限</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-w warndays: 提前多少天开始警告</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-i inactivedays：非活动期限</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>--stdin：从标准输入接收用户密码</code><br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code>echO&quot;PASSWORD&quot;|passwd--stdin USERNAME</code><br></p><h2 id="修改用户密码策略"><a href="#修改用户密码策略" class="headerlink" title="修改用户密码策略"></a>修改用户密码策略</h2><p>&emsp;&emsp;<code>chage[OPTION]...LOGIN</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-d LAST_DAY</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-E -–expiredate EXPIRE_DATE</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-I -–inactive INACTIVE</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-m –mindays MIN_DAYS</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-M –maxdays MAX_DAYS</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-W –warndays WARN_DAYS</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-l  显示密码策略</code><br><br>&emsp;&emsp;示例:<br>&emsp;&emsp;&emsp;&emsp;<code>chage-d 0 tom下一次登录强制重设密码</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>chage -m 0 -M42 -W14 -I7 tom</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>chage –E 2016-09-10 tom</code><br></p><h2 id="用户相关其他命令"><a href="#用户相关其他命令" class="headerlink" title="用户相关其他命令"></a>用户相关其他命令</h2><p>&emsp;&emsp;<code>chfn指定个人信息</code><br><br>&emsp;&emsp;<code>chsh指定shell</code><br><br>&emsp;&emsp;<code>finger</code><br></p><h2 id="创建组"><a href="#创建组" class="headerlink" title="创建组"></a>创建组</h2><p>&emsp;&emsp;<code>groupadd[OPTION]...group_name</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-g GID: 指明GIDS；[GID_MIN,GID_MAX]</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-r: 创建系统组</code><br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code>CentOS6：ID&lt;500</code><br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code>CentOS7：ID&lt;1000</code><br></p><h2 id="修改和删除组"><a href="#修改和删除组" class="headerlink" title="修改和删除组"></a>修改和删除组</h2><p>&emsp;&emsp;<code>组属性修改groupmod</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>groupmod[OPTION]..group</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-ngroup_name: 新名字</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-g GID: 新的GID</code><br><br>&emsp;&emsp;<code>组删除groupdel</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>groupdel GROUP</code><br></p><h2 id="更改组密码"><a href="#更改组密码" class="headerlink" title="更改组密码"></a>更改组密码</h2><p>&emsp;&emsp;<code>组密码gpasswd</code><br><br>&emsp;&emsp;<code>gpasswd [OPTION] GROUP</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-a user将user添加至指定组中</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-d user从指定组中移除用户user</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-A user1,user2,..设置有管理权限的用户列</code><br><br>&emsp;&emsp;<code>newgrp命令：临时切换主组</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>如果用户本不属于此组，则需要组密码</code><br></p><h2 id="更改和查看组成员"><a href="#更改和查看组成员" class="headerlink" title="更改和查看组成员"></a>更改和查看组成员</h2><p>&emsp;&emsp;<code>groupmems [options] [action]</code><br><br>&emsp;&emsp;options:<br><br>&emsp;&emsp;&emsp;&emsp;<code>-g, --groupgroupname更改为指定组（只有root）</code><br><br>&emsp;&emsp;Actions:<br><br>&emsp;&emsp;&emsp;&emsp;<code>-a, --addusername   指定用户加入组</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-d,--deleteusername   从组中删除角户</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-p, --purge    从组中清除所有成员</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-l, --list     显示组成员列表</code><br><br>&emsp;&emsp;<code>groups[OPTION].[USERNAME]..查看用户所属组列表</code><br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十五、Linux用户和组的配置及管理</title>
      <link href="/2020/03/28/%E5%8D%81%E4%BA%94%E3%80%81Linux%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%9A%84%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AE%A1%E7%90%86/"/>
      <url>/2020/03/28/%E5%8D%81%E4%BA%94%E3%80%81Linux%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%9A%84%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）用户和组的配置文件"><a href="#（一）用户和组的配置文件" class="headerlink" title="（一）用户和组的配置文件"></a>（一）用户和组的配置文件</h2><h3 id="Linux用户和组的主要配置文件"><a href="#Linux用户和组的主要配置文件" class="headerlink" title="Linux用户和组的主要配置文件:"></a>Linux用户和组的主要配置文件:</h3><p>&emsp;&emsp;/etc/passwd：用户及其属性信息（名称、UID主组ID等）<br><br>&emsp;&emsp;/etc/group：组及属性信息<br><br>&emsp;&emsp;/etc/shadolv：用户密码及其相关属性<br><br>&emsp;&emsp;/etc/gshadow：组密码及其相关属性<br></p><h3 id="passwd文件格式"><a href="#passwd文件格式" class="headerlink" title="passwd文件格式"></a>passwd文件格式</h3><p>&emsp;&emsp;loginname：登录用名（wang）<br><br>&emsp;&emsp;passwd：密码（×）<br><br>&emsp;&emsp;UID：用户身份编号（1000）<br><br>&emsp;&emsp;GID：登录默认所在组编号（1000）<br><br>&emsp;&emsp;GECOS用户全名或注释<br><br>&emsp;&emsp;home directory：用户主目录(/home/wang)<br><br>&emsp;&emsp;shell：用户默认使用shell(/bin/bash)<br></p><h3 id="shadow文件格式"><a href="#shadow文件格式" class="headerlink" title="shadow文件格式"></a>shadow文件格式</h3><p>&emsp;&emsp;登录用名<br><br>&emsp;&emsp;用户密码：一般用sha512加密<br><br>&emsp;&emsp;从1970年1月1日起到密码最近一次被更改的时间<br><br>&emsp;&emsp;密码再过几天可以被变更（0表示随时可被变更）<br><br>&emsp;&emsp;密码再过几天必须被变更（99999表示永不过期）<br><br>&emsp;&emsp;密码过期前几天系统提醒用户（默认为一周）<br><br>&emsp;&emsp;密码过期几天后帐号会被锁定<br><br>&emsp;&emsp;从1970年1月1日算起，多少天后帐号失效<br></p><h3 id="密码加密"><a href="#密码加密" class="headerlink" title="密码加密"></a>密码加密</h3><h4 id="加密机制"><a href="#加密机制" class="headerlink" title="加密机制"></a>加密机制</h4><p>&emsp;&emsp;加密：明文–&gt;密文<br><br>&emsp;&emsp;解密：密文–&gt;明文<br><br>&emsp;&emsp;单向加密：哈希算法，原文不同，密文必不同<br><br>&emsp;&emsp;&emsp;&emsp;相同算法定长输出，获得密文不可逆推出原始数据<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;雪崩效应：初始条件的微小改变，引起结果的巨大改变<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code>md5: message digest,128bits</code><br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code>sha1: secure hash algorithm,160bits</code><br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code>sha224: 224bits</code><br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code>sha256: 256bits</code><br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code>sha384: 384bits</code><br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code>sha512: 512bits</code><br><br>&emsp;&emsp;更改加密算法authconfig    –passalgo=sha256–update<br></p><h3 id="密码的复杂性策略"><a href="#密码的复杂性策略" class="headerlink" title="密码的复杂性策略"></a>密码的复杂性策略</h3><p>&emsp;&emsp;使用数字、大写字母、小写字母及特殊字符中至少3种<br><br>&emsp;&emsp;足够长<br><br>&emsp;&emsp;使用随机密码<br><br>&emsp;&emsp;定期更换，不要使用最近曾经使用过的密码<br></p><h3 id="密码期限"><a href="#密码期限" class="headerlink" title="密码期限"></a>密码期限</h3><p><img src="http://i1.fuimg.com/709978/9bd1eb0b738c1886.png" alt=""><br></p><h3 id="roup-文件格式"><a href="#roup-文件格式" class="headerlink" title="roup 文件格式"></a>roup 文件格式</h3><p>&emsp;&emsp;群组名称：就是群组名称<br><br>&emsp;&emsp;群组密码：通常不需要设定，密码是被记录在/etc/gshadow<br><br>&emsp;&emsp;GID：就是群组的ID<br><br>&emsp;&emsp;以当前组为附加组的用户列表（分隔符为逗号）</p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十四、Linux认证授权及用户定义及组的类别</title>
      <link href="/2020/03/22/%E5%8D%81%E5%9B%9B%E3%80%81Linux%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83%E5%8F%8A%E7%94%A8%E6%88%B7%E5%AE%9A%E4%B9%89%E5%8F%8A%E7%BB%84%E7%9A%84%E7%B1%BB%E5%88%AB/"/>
      <url>/2020/03/22/%E5%8D%81%E5%9B%9B%E3%80%81Linux%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83%E5%8F%8A%E7%94%A8%E6%88%B7%E5%AE%9A%E4%B9%89%E5%8F%8A%E7%BB%84%E7%9A%84%E7%B1%BB%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）用户user和组group"><a href="#（一）用户user和组group" class="headerlink" title="（一）用户user和组group"></a>（一）用户user和组group</h2><p>&emsp;&emsp;令牌token,identity<br><br>&emsp;&emsp;Linux用户：Username/UID<br><br>&emsp;&emsp;管理员：root,0<br><br>&emsp;&emsp;普通用户：1-65535<br><br>&emsp;&emsp;&emsp;&emsp;系统用户：1-499，1-999（CentOS7）<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;对守护进程获取资源进行权限分配<br><br>&emsp;&emsp;&emsp;&emsp;登录用户：500+，1000+（CentOS7）<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;交互式登录<br><br>&emsp;&emsp;Linux组: Groupname/GID<br><br>&emsp;&emsp;管理员组: root,0<br><br>&emsp;&emsp;普通组<br><br>&emsp;&emsp;&emsp;&emsp;系统组：1-499，1-999（CENTOS7）<br><br>&emsp;&emsp;&emsp;&emsp;普通组: 500+，1000+（CENTOS7）<br></p><h2 id="（二）Linux-安全上下文"><a href="#（二）Linux-安全上下文" class="headerlink" title="（二）Linux 安全上下文"></a>（二）Linux 安全上下文</h2><h3 id="Linux安全上下文"><a href="#Linux安全上下文" class="headerlink" title="Linux安全上下文"></a>Linux安全上下文</h3><p>&emsp;&emsp;&emsp;&emsp;运行中的程序：进程(process)<br><br>&emsp;&emsp;&emsp;&emsp;以进程发起者的身份运行：<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;root:/bin/cat<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;mage：/bin/cat<br><br>&emsp;&emsp;&emsp;&emsp;进程所能够访问资源的权限取决于进程的运行者的身份<br></p><h3 id="Linux组的类别"><a href="#Linux组的类别" class="headerlink" title="Linux组的类别"></a>Linux组的类别</h3><p>&emsp;&emsp;&emsp;&emsp;用户的主要组(primary group)<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;用户必须属于一个且只有一个主组<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;组名同用户名，且仅包含一个用户，私有组<br><br>&emsp;&emsp;&emsp;&emsp;用户的附加值 (supplementary group)<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;一个用户可以属于零个或多个辅助组<br></p><h3 id="Linux用户和组的主要配置文件"><a href="#Linux用户和组的主要配置文件" class="headerlink" title="Linux用户和组的主要配置文件:"></a>Linux用户和组的主要配置文件:</h3><p>&emsp;&emsp;&emsp;&emsp;/etc/passwd：用户及其属性信息（名称、UID、主组ID等）<br><br>&emsp;&emsp;&emsp;&emsp;/etc/group：组及其属性信息<br><br>&emsp;&emsp;&emsp;&emsp;/etc/shadow：户密码及其相关属性<br><br>&emsp;&emsp;&emsp;&emsp;/etc/gshadow：组密码及其相关<br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十三、IO文件重定向及管道深入讲解</title>
      <link href="/2020/03/21/%E5%8D%81%E4%B8%89%E3%80%81IO%E6%96%87%E4%BB%B6%E9%87%8D%E5%AE%9A%E5%90%91%E5%8F%8A%E7%AE%A1%E9%81%93%E6%B7%B1%E5%85%A5%E8%AE%B2%E8%A7%A3/"/>
      <url>/2020/03/21/%E5%8D%81%E4%B8%89%E3%80%81IO%E6%96%87%E4%BB%B6%E9%87%8D%E5%AE%9A%E5%90%91%E5%8F%8A%E7%AE%A1%E9%81%93%E6%B7%B1%E5%85%A5%E8%AE%B2%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）标准输入和输出"><a href="#（一）标准输入和输出" class="headerlink" title="（一）标准输入和输出"></a>（一）标准输入和输出</h2><h3 id="程序-指令-数据"><a href="#程序-指令-数据" class="headerlink" title="程序: 指令+数据"></a>程序: 指令+数据</h3><p>&emsp;&emsp;读入数据：Input<br><br>&emsp;&emsp;输出数据．Output<br><br>&emsp;&emsp;打开的文件都有一个fd：file descriptor（文件描述符）<br><br>&emsp;&emsp;Linux给程序提供三种I/O设备<br><br>&emsp;&emsp;标准输入（STDIN）-o默认接受来自键盘的输入<br><br>&emsp;&emsp;标准输出（STDOUT）-1默认输出到终端窗口<br><br>&emsp;&emsp;标准错误（STDERR）-2默认输出到终端窗口<br><br>&emsp;&emsp;I/O重定向：改变默认位置<br><br>&emsp;&emsp;可以通过对相关命令进行重定向从而实现记录一些操作过程中的操作日志，包括输出日志，以及错误日志。<br></p><h2 id="（二）把输入和错误重定向到文件"><a href="#（二）把输入和错误重定向到文件" class="headerlink" title="（二）把输入和错误重定向到文件"></a>（二）把输入和错误重定向到文件</h2><p>&emsp;&emsp;STDOUT和STDERR可以被重定向到文件<br><br>&emsp;&emsp;命令&emsp;&emsp;  操作符号&emsp;&emsp;  文件名<br><br>&emsp;&emsp;支持操作符号包括：<br><br>&emsp;&emsp;&emsp;&emsp;&gt; 把STDOUT重定向到文件<br><br>&emsp;&emsp;&emsp;&emsp;2&gt;    把STDERR重定向到文件<br><br>&emsp;&emsp;&emsp;&emsp;&amp;&gt;把所有输出重定向到文件<br><br>&emsp;&emsp;&gt;文件内容会被盖<br><br>&emsp;&emsp;&emsp;&emsp;set  -C禁止将内容禮盖已有文件，但可追加<br><br>&emsp;&emsp;&emsp;&emsp;&gt;|file强制覆盖<br><br>&emsp;&emsp;&emsp;&emsp;set+C允许覆盖<br><br>&emsp;&emsp;&gt;&gt;原有内容基础上，追加内容<br><br>&emsp;&emsp;2&gt; 覆盖重定向错误输出数据流<br><br>&emsp;&emsp;2&gt;&gt;追加重定向错误输出数据流<br><br>&emsp;&emsp;标准输出和错误输出各自定向至不同位置<br><br>&emsp;&emsp;&emsp;&emsp;<code>COMMAND&gt;/path/to/file.out2&gt;/path/to/error.out</code><br><br>&emsp;&emsp;合并标输出和错误输出为同一个数据流进行重定向<br><br>&emsp;&emsp;&amp;&gt;覆盖重定向<br><br>&emsp;&emsp;&amp;&gt;&gt;追加重定向<br><br>&emsp;&emsp;<code>COMMAND&gt;/path/to/file.out2&gt;&amp;1</code>（顺序很重要）<br><br>&emsp;&emsp;<code>COMMAND&gt;&gt;/path/to/file.out2&gt;&amp;1</code><br><br>&emsp;&emsp;()：合并多个程序的STDOUT<br><br>&emsp;&emsp;&emsp;&emsp;<code>（cal2007；cal2008 &gt; all.txt</code><br></p><h2 id="（三）tr-命令"><a href="#（三）tr-命令" class="headerlink" title="（三）tr 命令"></a>（三）tr 命令</h2><p>&emsp;&emsp;tr转换和删除字符<br><br>&emsp;&emsp;<code>tr [OPTION]...SETI[SET2]</code><br><br>&emsp;&emsp;选项：<br><br>&emsp;&emsp;&emsp;&emsp;-c—C–complement：取字夺集的补集<br><br>&emsp;&emsp;&emsp;&emsp;-d–delete：删除所有属于第一字符集的字符<br><br>&emsp;&emsp;&emsp;&emsp;-s–squeeze-repeats：把连续重复的字以单独一个字符表示<br><br>&emsp;&emsp;&emsp;&emsp;-t–truncate-setl：将第一个字符集对应字符转化为第二字符集对应的字符<br><br>&emsp;&emsp;&emsp;&emsp;[:alnum:]·字母和数字[:alpha:]·字母[:cntrl:]：控制（非打印）字符[:digit:]：数字<br><br>&emsp;&emsp;&emsp;&emsp;[:graph:]：图形字符[:lower:]：小写字母[:print:]·可打印字符[:punct:]：标点符号<br><br>&emsp;&emsp;&emsp;&emsp;[:space:]：空白字符[:upper:]：大写字母[:xdigit:]：十六进制字符<br><br>&emsp;&emsp;把多行发送给STDIN<br><br>&emsp;&emsp;使用”&lt;&lt;终止词”命令从键盘扌巴多行重导向给STDIN<br><br>&emsp;&emsp;直到终止词位置的所有文本都发送给STDIN<br><br>&emsp;&emsp;有时被称为就地文本（heretext）<br><br>&emsp;&emsp;<code>mail –s “PIeaseCaII”admin@magedu.com&lt;&lt;END</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>&gt;Hi Wang,</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>&gt;Please give me a call when you get in.We may need</code><br><br>&emsp;&emsp;<code>&gt;to do some maintenance on server1.</code><br><br>&emsp;&emsp;<code>&gt;</code><br><br>&emsp;&emsp;<code>&gt;Details when you’re on-site</code><br><br>&emsp;&emsp;<code>&gt;Zhang</code><br><br>&emsp;&emsp;<code>&gt;END</code><br></p><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><p>&emsp;&emsp;管道（使用符号”|”表示）用来连接命令<br><br>&emsp;&emsp;命令1|命令2|命令3|…<br><br>&emsp;&emsp;将命令1的STDOUT发送给命令2的STD|N，命令2的STDOUT发送到命令3的STD|N<br><br>&emsp;&emsp;STDERR默认不能通过管道转发，可利用2&gt;&amp;1或|&amp;实现<br><br>&emsp;&emsp;最后一个命令会在当箭shell进程的子shell进程中执行用来<br><br>&emsp;&emsp;组合多种工具的功能<br><br>&emsp;&emsp;<code>ls |tr &#39;a-z&#39; &#39;A-Z&#39;</code><br><br>&emsp;&emsp;less: 一页一页地查看输入<br><br>&emsp;&emsp;ls –l /etc丨less<br><br>&emsp;&emsp;mail：通过电子邮件发送输入<br><br>&emsp;&emsp;&emsp;&emsp;<code>echo “testemail”|mail-s “test”user@example.com</code><br><br>&emsp;&emsp;lpr：把输入发送给打印机<br><br>&emsp;&emsp;&emsp;&emsp;<code>echo”testprint”|lpr –P printer_name</code><br></p><h3 id="管道中-符号"><a href="#管道中-符号" class="headerlink" title="管道中-符号"></a>管道中-符号</h3><p>&emsp;&emsp;示例：<br><br>&emsp;&emsp;将/home里面的文件打包，但打包的数据不是记录到文件，而是传送到stdout，经过管道后，将tar-cvf-/home传送给后面的tar-xvf一后面的这个-则是取前一个命令的stdout，因此，就不需要使用临时file了<br><br>&emsp;&emsp;<code>tar –cvf - /home | tar –xvf –</code><br><br>&emsp;&emsp;重定向到多个目标<br><br>&emsp;&emsp;命令1 | tee[-a]文件名 | 命令2<br><br>&emsp;&emsp;&emsp;&emsp;把命令1的STDOUT保存在文件中，做为命令2的输入<br><br>&emsp;&emsp;&emsp;&emsp;-a追加<br><br>&emsp;&emsp;使用<br><br>&emsp;&emsp;保存不同阶段的输出<br><br>&emsp;&emsp;复杂管道的故障排除<br><br>&emsp;&emsp;同时查看和记录输出<br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十二、软硬连接及文件系统inode</title>
      <link href="/2020/03/15/%E5%8D%81%E4%BA%8C%E3%80%81%E8%BD%AF%E7%A1%AC%E8%BF%9E%E6%8E%A5%E5%8F%8A%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9Finode/"/>
      <url>/2020/03/15/%E5%8D%81%E4%BA%8C%E3%80%81%E8%BD%AF%E7%A1%AC%E8%BF%9E%E6%8E%A5%E5%8F%8A%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9Finode/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）软硬链接区别"><a href="#（一）软硬链接区别" class="headerlink" title="（一）软硬链接区别"></a>（一）软硬链接区别</h2><p>&emsp;&emsp;本质： 硬链接：一个文件多个名字。 软链接：一个文件对应的快捷方式，本质上不是同一个文件。<br><br>&emsp;&emsp;链接数：硬链接会增长链接数，软链接不会增长链接数。<br><br>&emsp;&emsp;跨分区：软链接可以跨分区，硬连接不能跨分区。<br><br>&emsp;&emsp;目录：硬链接不支持跨目录操作，软链接支持跨目录操作。<br><br>&emsp;&emsp;原始和链接文件关系：硬链接本质上是相同的，软链接是依赖于的关系。<br><br>&emsp;&emsp;删除：硬链接删除原始文件，硬链接不受影响，软链接删除原始文件，软链接就会失效。<br><br>&emsp;&emsp;查看软件界对应文件：readlink。<br></p><h3 id="mv-和-indoe"><a href="#mv-和-indoe" class="headerlink" title="mv 和 indoe"></a>mv 和 indoe</h3><p>&emsp;&emsp;如果mv命令的目标和源在相同的文件系统，作为mv命令<br><br>&emsp;&emsp;&emsp;&emsp;用新的文件名创建对应新的目录项<br><br>&emsp;&emsp;&emsp;&emsp;删除旧目录条目对应的旧的文件名<br><br>&emsp;&emsp;&emsp;&emsp;不影响inode表（除时间戳）或磁盘上的数据位置没有数据被移动！<br><br>&emsp;&emsp;如果目标和源在一个不同的文件系统，mv相当于cp和rm<br></p><h3 id="file命令确定文件内容"><a href="#file命令确定文件内容" class="headerlink" title="file命令确定文件内容"></a>file命令确定文件内容</h3><p>&emsp;&emsp;文件可以包含多种类型的数据<br><br>&emsp;&emsp;检查文件的类型，然后确定适当的打开命令或应用程序使用<br><br>&emsp;&emsp;file[options]<filename>…<br><br>&emsp;&emsp;常用选项：<br><br>&emsp;&emsp;&emsp;&emsp;-b 列出文件辨识结果时，不显示文件名称<br><br>&emsp;&emsp;&emsp;&emsp;-f filelist列出文件filelist中文件名的文件类型<br><br>&emsp;&emsp;&emsp;&emsp;-F使用指定分隔符号替换输出文件名后默认的”：” 分隔符<br><br>&emsp;&emsp;&emsp;&emsp;-L查看对应软链接对应文件的文件类型<br><br>&emsp;&emsp;&emsp;&emsp;–help显示命令在线帮助<br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十一、Linux文件管理命令mv、rm、which、tree命令</title>
      <link href="/2020/03/14/%E5%8D%81%E4%B8%80%E3%80%81Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4mv%E3%80%81rm%E3%80%81which%E3%80%81tree%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/03/14/%E5%8D%81%E4%B8%80%E3%80%81Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4mv%E3%80%81rm%E3%80%81which%E3%80%81tree%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="移动和重命名文件"><a href="#移动和重命名文件" class="headerlink" title="移动和重命名文件"></a>移动和重命名文件</h2><p>&emsp;&emsp;<code>mv [OPTION]...[-T] SOURCE DEST</code><br><br>&emsp;&emsp;<code>mv [OPTION]...SOURCE...DIRECTORY</code><br><br>&emsp;&emsp;<code>mv [OPTION]...-t DIRECTORY SOURCE...</code><br><br>&emsp;&emsp;&emsp;&emsp;常用选项：<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;-i: 交互式<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;-f: 强制<br></p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>&emsp;&emsp;rm [OPTION]…FILE..<br><br>&emsp;&emsp;常用选项：<br><br>&emsp;&emsp;&emsp;&emsp;-i       交互式<br><br>&emsp;&emsp;&emsp;&emsp;-f       强制删除<br><br>&emsp;&emsp;&emsp;&emsp;-r       递归<br><br>&emsp;&emsp;&emsp;&emsp;–no-preserve-root 删除<br><br>&emsp;&emsp;示例：<br><br>&emsp;&emsp;&emsp;&amp;emsp&emsp;&emsp;rm  –rf    /<br></p><h3 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h3><p>&emsp;&emsp;tree 显示目录树<br><br>&emsp;&emsp;&emsp;&emsp;-d: 只显示目录<br><br>&emsp;&emsp;&emsp;&emsp;-L level：指定显示的层级数目<br><br>&emsp;&emsp;&emsp;&emsp;-P pattern:只显示由指定pattern匹配到的路径<br><br>&emsp;&emsp;mkdir 创建目录<br><br>&emsp;&emsp;&emsp;&emsp;-p: 存在于不报错，且可自动创建所需的各目录<br><br>&emsp;&emsp;&emsp;&emsp;-v: 显示详细信息<br><br>&emsp;&emsp;&emsp;&emsp;-m MODE: 创建目录时直接指定权限<br><br>&emsp;&emsp;rmdir删除空目录<br><br>&emsp;&emsp;&emsp;&emsp;-p: 递归删除父空目录<br><br>&emsp;&emsp;&emsp;&emsp;-v: 显示详细信息<br><br>&emsp;&emsp;rm –r 递归删除目录树<br></p><h3 id="索引节点"><a href="#索引节点" class="headerlink" title="索引节点"></a>索引节点</h3><p>&emsp;&emsp;inode（index node）表中包含文件系统所有文件列表<br><br>&emsp;&emsp;一个节点（索引节点）是在一个表项，包含有关文件的信息（元数据），包括：<br><br>&emsp;&emsp;&emsp;&emsp;文件类型，权限，UID，GID<br><br>&emsp;&emsp;&emsp;&emsp;链接数（指向这个文件名路径名称个数）<br><br>&emsp;&emsp;&emsp;&emsp;该文件的大小和不同的时间戳<br><br>&emsp;&emsp;&emsp;&emsp;指向磁盘上文件的数据块指针<br><br>&emsp;&emsp;&emsp;&emsp;有关文件的其他数据<br><br><img src="https://i1.fuimg.com/709978/c05395d68caaf064.png" alt=""><br><br>&emsp;&emsp;文件引用一个是inode号<br><br>&emsp;&emsp;人是通过文件名来引用一个文件<br><br>&emsp;&emsp;一个目录是目录下的文件名和文件inode号之间的映射<br><br><img src="https://i1.fuimg.com/709978/d4f76f0cce70595a.png" alt=""><br></p><h3 id="在CP的命令"><a href="#在CP的命令" class="headerlink" title="在CP的命令:"></a>在CP的命令:</h3><p>&emsp;&emsp;&emsp;&emsp;分配一个仝闲的inode号，在inode表中生成新条目<br><br>&emsp;&emsp;&emsp;&emsp;在目录中创建一个目录项，名称与inode编号关联<br><br>&emsp;&emsp;&emsp;&emsp;拷贝数据生成新的文件<br></p><h3 id="rm-命令"><a href="#rm-命令" class="headerlink" title="rm 命令"></a>rm 命令</h3><p>&emsp;&emsp;&emsp;&emsp;链接数递减，从而释放的inode号可以被重用<br><br>&emsp;&emsp;&emsp;&emsp;把数据块放在空闲列表中<br><br>&emsp;&emsp;&emsp;&emsp;删除目录项<br><br>&emsp;&emsp;&emsp;&emsp;数据实际上不会马上被删除，但当另一个文件使用数据块时将被覆盖。<br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十、Linux 文件通配符进阶及cp命令详解</title>
      <link href="/2020/03/08/%E5%8D%81%E3%80%81Linux-%E6%96%87%E4%BB%B6%E9%80%9A%E9%85%8D%E7%AC%A6%E8%BF%9B%E9%98%B6%E5%8F%8Acp%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/03/08/%E5%8D%81%E3%80%81Linux-%E6%96%87%E4%BB%B6%E9%80%9A%E9%85%8D%E7%AC%A6%E8%BF%9B%E9%98%B6%E5%8F%8Acp%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）创建空文件和刷新时间"><a href="#（一）创建空文件和刷新时间" class="headerlink" title="（一）创建空文件和刷新时间"></a>（一）创建空文件和刷新时间</h2><h3 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h3><p>&emsp;&emsp;touch[OPTION]…FILE…<br><br>&emsp;&emsp;-a仅改变atime和ctime<br><br>&emsp;&emsp;-m仅改变mtime和ctime<br><br>&emsp;&emsp;-t [[CC]YY]MMDDhhmm[.ss]<br><br>&emsp;&emsp;&emsp;&emsp;指定atime和mtime的时间戳<br><br>&emsp;&emsp;-c 还如果文件不存在，则不予创建<br></p><h3 id="（二）复制文件和目录CP"><a href="#（二）复制文件和目录CP" class="headerlink" title="（二）复制文件和目录CP"></a>（二）复制文件和目录CP</h3><p>&emsp;&emsp;cp [OPTION]…[-T]SOURCE DEST<br><br>&emsp;&emsp;cp [OPTION]…SOURCE…DIRECTORY<br><br>&emsp;&emsp;cp [OPTIONJ…-t DIRECTORY SOURCE…<br><br>&emsp;&emsp;cp SRC DEST<br><br>&emsp;&emsp;SRC是文件：<br><br>&emsp;&emsp;&emsp;&emsp;如果目标不存在：新建DEST，并将SRC中内容填充至DEST中<br><br>&emsp;&emsp;&emsp;&emsp;如果目标存在：<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;如果DEST是文件：将SRC中的内容覆盖至DEST中，基于安全，建议为cp命令使用 -i选项<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;如果DEST是目录：在DEST下新建与原文件同名的文件，并将SRC中内容填充至新文件中<br></p><h4 id="复制cp"><a href="#复制cp" class="headerlink" title="复制cp"></a>复制cp</h4><p><img src="https://i2.tiimg.com/709978/fc9780e1d69ce404.png" alt=""></p><h3 id="cp-选项"><a href="#cp-选项" class="headerlink" title="cp 选项"></a>cp 选项</h3><p>&emsp;&emsp;-i：覆盖前提示  -n：不榿盖，注意两者顺序<br><br>&emsp;&emsp;-r,-R：递归复制目录及内部的所有内容<br><br>&emsp;&emsp;-a：归档，相当于-dR –preserv=all<br><br>&emsp;&emsp;-d：–no-dereference–preserv=links不复制原文件，只复制链接名<br><br>&emsp;&emsp;–preserv[=ATTR_LIST]<br><br>&emsp;&emsp;&emsp;&emsp;mode:权限<br><br>&emsp;&emsp;&emsp;&emsp;ownership:属主属组<br><br>&emsp;&emsp;&emsp;&emsp;timestamp:<br><br>&emsp;&emsp;&emsp;&emsp;links<br><br>&emsp;&emsp;&emsp;&emsp;xattr<br><br>&emsp;&emsp;&emsp;&emsp;context<br><br>&emsp;&emsp;-p：等同–preserv=mode,ownership,timestamp<br><br>&emsp;&emsp;-v：–verbose<br><br>&emsp;&emsp;-f：–force<br><br>&emsp;&emsp;-u:–update只复制源比目标更新文件或目标不存在的文件<br><br>&emsp;&emsp;–backup=numbered目标存在覆盖前先备份加数字后缀<br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>九、Linux常见命令用法、变量及文件通配符</title>
      <link href="/2020/03/07/%E4%B9%9D%E3%80%81Linux%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95%E3%80%81%E5%8F%98%E9%87%8F%E5%8F%8A%E6%96%87%E4%BB%B6%E9%80%9A%E9%85%8D%E7%AC%A6/"/>
      <url>/2020/03/07/%E4%B9%9D%E3%80%81Linux%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95%E3%80%81%E5%8F%98%E9%87%8F%E5%8F%8A%E6%96%87%E4%BB%B6%E9%80%9A%E9%85%8D%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）更改目录"><a href="#（一）更改目录" class="headerlink" title="（一）更改目录"></a>（一）更改目录</h2><h3 id="cd改变目录"><a href="#cd改变目录" class="headerlink" title="cd改变目录"></a>cd改变目录</h3><p>&emsp;&emsp;使用绝对或相对路径：<br><br>&emsp;&emsp;&emsp;&emsp;cd/home/wang/<br><br>&emsp;&emsp;&emsp;&emsp;cd home/wang<br><br>&emsp;&emsp;&emsp;&emsp;切换至父目录：cd..<br><br>&emsp;&emsp;&emsp;&emsp;切换至当前用户主目录：cd<br><br>&emsp;&emsp;&emsp;&emsp;切换至以前的工作目录：cd -<br><br>&emsp;&emsp;选项：-P<br><br>&emsp;&emsp;相关的环境变量：<br><br>&emsp;&emsp;&emsp;&emsp;PWD：当前目录路径<br><br>&emsp;&emsp;&emsp;&emsp;OLDPWD：上一次目录路径<br></p><h2 id="（二）列出目录内容"><a href="#（二）列出目录内容" class="headerlink" title="（二）列出目录内容"></a>（二）列出目录内容</h2><h3 id="列出当前目录的内容或指定目录"><a href="#列出当前目录的内容或指定目录" class="headerlink" title="列出当前目录的内容或指定目录"></a>列出当前目录的内容或指定目录</h3><p>&emsp;&emsp;用法：ls [options] [files_or_dirs]<br><br>&emsp;&emsp;示例：<br><br>&emsp;&emsp;&emsp;&emsp;ls -a包含隐藏文件<br><br>&emsp;&emsp;&emsp;&emsp;ls -l显示额外的信息<br><br>&emsp;&emsp;&emsp;&emsp;ls -R目录递归诵过<br><br>&emsp;&emsp;ls -ld目录和符号链接信息<br><br>&emsp;&emsp;ls -1文件分行显示<br><br>&emsp;&emsp;&emsp;&emsp;ls -s按从大到小排序<br><br>&emsp;&emsp;&emsp;&emsp;ls -t按mtime排序<br><br>&emsp;&emsp;&emsp;&emsp;l s-u配合 -t选项，显示并按atime从新到旧排序<br><br>&emsp;&emsp;&emsp;&emsp;ls -U按目录存放顺序显示<br><br>&emsp;&emsp;&emsp;&emsp;ls -X按文件后缀排序<br></p><h2 id="（三）文件通配符"><a href="#（三）文件通配符" class="headerlink" title="（三）文件通配符"></a>（三）文件通配符</h2><p>&emsp;&emsp;* 匹配零个或多个字符<br><br>&emsp;&emsp;？匹配任何单个字符<br><br>&emsp;&emsp;～当前用户家目录<br><br>&emsp;&emsp;～mage用户mage家目录<br><br>&emsp;&emsp;～+当前工作目录<br><br>&emsp;&emsp;～-前一个工作目录<br><br>&emsp;&emsp;[0-9]：匹配数字范围<br><br>&emsp;&emsp;[a-z]：字母<br><br>&emsp;&emsp;[A-Z]：字母<br><br>&emsp;&emsp;[wang]匹配列表中的任何的一个字符<br><br>&emsp;&emsp;[^wang]匹配列表中的所有字符以外的字符<br><br>&emsp;&emsp;预定义的字符类：man 7 glob<br><br>&emsp;&emsp;[:digit:]：任意数字，相当于0-9<br><br>&emsp;&emsp;[:lower:]：任意小写字母<br><br>&emsp;&emsp;[:upper:]：任意大写字母<br><br>&emsp;&emsp;[:alpha:]：任意大小写字母<br><br>&emsp;&emsp;[:alnum:]：任意数字或字母<br><br>&emsp;&emsp;[:blank:]：水平空白字符<br><br>&emsp;&emsp;[:space:]：水平或垂直空白字符<br><br>&emsp;&emsp;[:punct:]：标点符号<br><br>&emsp;&emsp;[:print:]：可打印字符<br><br>&emsp;&emsp;[:cntrl:]：控制（非打印）字符<br><br>&emsp;&emsp;[:graph:]：图形字符<br><br>&emsp;&emsp;[:xdigit:]：十六进制字符<br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八、Linux平台文件系统管理</title>
      <link href="/2020/03/01/%E5%85%AB%E3%80%81Linux%E5%B9%B3%E5%8F%B0%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
      <url>/2020/03/01/%E5%85%AB%E3%80%81Linux%E5%B9%B3%E5%8F%B0%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）文件系统与目录结构"><a href="#（一）文件系统与目录结构" class="headerlink" title="（一）文件系统与目录结构"></a>（一）文件系统与目录结构</h2><p><img src="https://i2.tiimg.com/709978/1af7aae9d4811aa0.png" alt=""><br><br>&emsp;&emsp;文件和目录被组织成一个单根倒置树结构<br><br>&emsp;&emsp;文件系统从根目录下开始，用“/”表示<br><br>&emsp;&emsp;根文件系统（rootfs）：root filesystem<br><br>&emsp;&emsp;文件名称区分大小写<br><br>&emsp;&emsp;以．开头的文件为藏文件<br><br>&emsp;&emsp;路径分隔的/<br><br>&emsp;&emsp;文件有两类数据<br><br>&emsp;&emsp;&emsp;&emsp;文件数据：metadata<br><br>&emsp;&emsp;&emsp;&emsp;数据data<br><br>&emsp;&emsp;文件系统分层结构：LSB Linux Standard Base<br><br>&emsp;&emsp;FHS:(FiIesystemHierarchyStandard)<br><br>&emsp;&emsp;&emsp;&emsp;<a href="http://www.pathname.com/fhs/" target="_blank" rel="noopener">http://www.pathname.com/fhs/</a><br><br>&emsp;&emsp;在不关机的前提下进行磁盘扫描 echo ‘- – -‘ &gt; /sys/class/scsi_host/host2/scan<br></p><h2 id="（二）文件名规则"><a href="#（二）文件名规则" class="headerlink" title="（二）文件名规则"></a>（二）文件名规则</h2><p>&emsp;&emsp;文件名最长255个字节<br><br>&emsp;&emsp;包括路径在内文件名称最长4095个字节<br><br>&emsp;&emsp;蓝色–&gt;目录   绿色–|&gt;可执行文件     红色–&gt;压缩文件浅    蓝色–&gt;链接文件  灰色–&gt;其他文件<br><br>&emsp;&emsp;除了斜杠和NUL，所有字符都有效，但使用特殊字符的目录名和文件不推荐使用，有些字符需要用引号来引用它们。<br><br>&emsp;&emsp;标准Linux文件系统（如ext4），文件名称大小写敏感。例如<br><br>&emsp;&emsp;&emsp;&emsp;MAIL, Mail, mail, mAiL<br></p><h2 id="（三）文件系统结构"><a href="#（三）文件系统结构" class="headerlink" title="（三）文件系统结构"></a>（三）文件系统结构</h2><p>&emsp;&emsp;/boot：引导文件存放目录，内核文件(vmlinuz)、引导加载器（bootloader,grub）都存放于此目录<br><br>&emsp;&emsp;/bin：供所有用户使用的基本命令；不能关联至独立分区，OS启动即会用到的程序<br><br>&emsp;&emsp;/sbin管理类的基本命令；不能关联至独立分区，OS启动即会用到的程序<br>&emsp;&emsp;/lib：启动时程序依赖的基本共享库文件以及内核模块文件(lib/modules)<br><br>&emsp;&emsp;/lib64：专用于×86_64系统上的辅助共享库文件存放位置<br><br>&emsp;&emsp;/etc：配置文件目录<br><br>&emsp;&emsp;/home/USERNAME：普通用户家目录<br><br>&emsp;&emsp;/root：管理员的家目录<br><br>&emsp;&emsp;/media便携式移动设备挂载点<br><br>&emsp;&emsp;/mnt：临时文件系统挂载点<br><br>&emsp;&emsp;/dev：设备文件及特殊文件存储位置<br><br>&emsp;&emsp;&emsp;&emsp;b：block device，随机访问<br><br>&emsp;&emsp;&emsp;&emsp;c：character device，线性访问<br><br>&emsp;&emsp;/opt：第三方应用程序的安装位置<br><br>&emsp;&emsp;/srv：系统上运行的服务用到的数据<br><br>&emsp;&emsp;/tmp：临时文件存储位置<br><br>&emsp;&emsp;/usr：universal shared, read-only data<br><br>&emsp;&emsp;&emsp;&emsp;bin:保证系统拥有完整功能而提供的应用程序<br><br>&emsp;&emsp;&emsp;&emsp;sbin:<br><br>&emsp;&emsp;&emsp;&emsp;lib：32位使用<br><br>&emsp;&emsp;&emsp;&emsp;lib64：只存在64位系统<br><br>&emsp;&emsp;&emsp;&emsp;include：C程序的头文件(header files)<br><br>&emsp;&emsp;&emsp;&emsp;share：结构伴独立的数据，例如doc, man等<br><br>&emsp;&emsp;local：第三方应用程序的安装位置<br><br>&emsp;&emsp;&emsp;&emsp;bin, sbin, lib, lib64, etc, share<br><br>&emsp;&emsp;/var：variable data files<br><br>&emsp;&emsp;&emsp;&emsp;cache：应用程序缓存数据目录<br><br>&emsp;&emsp;&emsp;&emsp;lib：应用程序状态信息数据<br><br>&emsp;&emsp;&emsp;&emsp;local：专用于为/usr/local下的应用程序存储可变数据<br><br>&emsp;&emsp;&emsp;&emsp;lock：锁文件<br><br>&emsp;&emsp;&emsp;&emsp;log：日志目录及文件<br><br>&emsp;&emsp;&emsp;&emsp;opt：专用于为/opt下的应用程序存储可变数据<br><br>&emsp;&emsp;&emsp;&emsp;run：运行中的进程相关数据，通常用于存储进程pid文件<br><br>&emsp;&emsp;&emsp;&emsp;spool:上应用程序数据池<br><br>&emsp;&emsp;&emsp;&emsp;tmp：保存系统两次重启之间产生的临时数据<br><br>&emsp;&emsp;/proc：用于输出内核与进程信息相关的虚拟文件系统<br><br>&emsp;&emsp;/sys：用于输出当前系统上硬件设备相关信息虚拟文件系统<br><br>&emsp;&emsp;/selinux：security enhanced Linux，selinux相关的安全策略等信息的存储位置<br><br>&emsp;&emsp;二进制程序：/bin ,/sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin<br><br>&emsp;&emsp;库文件：/lib, /lib64，/usr/lib, /usr/lib64, /usr/local/lib, /usr/local/lib64<br><br>&emsp;&emsp;配置文件：/etc, /etc/DIRECTORY, /usr/local/etc<br><br>&emsp;&emsp;帮助文件：/usr/share/man, /usr/share/doc, /usr/local/share/man, /usr/local/share)doc<br><br>&emsp;&emsp;-：普通文件<br><br>&emsp;&emsp;d：目录文件<br><br>&emsp;&emsp;b：块设备<br><br>&emsp;&emsp;c：字符设备<br><br>&emsp;&emsp;l：符号链接文件<br><br>&emsp;&emsp;p：管道文件pipe<br><br>&emsp;&emsp;s：套接字文件socket<br></p><h2 id="（四）CentOS-7-目录变化"><a href="#（四）CentOS-7-目录变化" class="headerlink" title="（四）CentOS 7 目录变化"></a>（四）CentOS 7 目录变化</h2><p>&emsp;&emsp;/bin和/usr/bin<br><br>&emsp;&emsp;/sbin和/usr/sbin<br><br>&emsp;&emsp;/lib和/usr/lib<br><br>&emsp;&emsp;/lib64和/usr/lib64<br></p><h2 id="（五）显示当前工作目录"><a href="#（五）显示当前工作目录" class="headerlink" title="（五）显示当前工作目录"></a>（五）显示当前工作目录</h2><p>&emsp;&emsp;每个shell和系统进程都有一个当前的工作目录<br><br>&emsp;&emsp;CWD：current work directory<br><br>&emsp;&emsp;显示当前shell CWD的绝对路径<br><br>&emsp;&emsp;&emsp;&emsp;pwd：printing working directory<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;-P显示真实物理路径<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;-L显示链接路径（默认）<br></p><h2 id="（六）绝对路径和相对路径"><a href="#（六）绝对路径和相对路径" class="headerlink" title="（六）绝对路径和相对路径"></a>（六）绝对路径和相对路径</h2><p>&emsp;&emsp;绝对路径<br><br>&emsp;&emsp;&emsp;&emsp;以正斜杠开始<br><br>&emsp;&emsp;&emsp;&emsp;完整的文件的位置路径<br><br>&emsp;&emsp;&emsp;&emsp;可用于任何想指定一个文件名的时候<br><br>&emsp;&emsp;相对路径名<br><br>&emsp;&emsp;&emsp;&emsp;不以斜线开始<br><br>&emsp;&emsp;&emsp;&emsp;指定相对于当前工作目录或某目录的位置<br><br>&emsp;&emsp;&emsp;&emsp;可以作为一个简短的形式指定一个文件名<br><br>&emsp;&emsp;基名：bdsename<br><br>&emsp;&emsp;目录名：dirname<br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>七、Linux系统下man文档的用法和技巧</title>
      <link href="/2020/02/29/%E4%B8%83%E3%80%81Linux%E7%B3%BB%E7%BB%9F%E4%B8%8Bman%E6%96%87%E6%A1%A3%E7%9A%84%E7%94%A8%E6%B3%95%E5%92%8C%E6%8A%80%E5%B7%A7/"/>
      <url>/2020/02/29/%E4%B8%83%E3%80%81Linux%E7%B3%BB%E7%BB%9F%E4%B8%8Bman%E6%96%87%E6%A1%A3%E7%9A%84%E7%94%A8%E6%B3%95%E5%92%8C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）man-命令"><a href="#（一）man-命令" class="headerlink" title="（一）man 命令"></a>（一）man 命令</h2><p>&emsp;&emsp;提供命令帮助的文件<br><br>&emsp;&emsp;手册页存放在/usr/share/man<br><br>&emsp;&emsp;几乎每个命令都有man的 “页面”<br><br>&emsp;&emsp;man页面分组为不同的“章节”<br><br>&emsp;&emsp;统称为Linux手册<br><br>&emsp;&emsp;man命令的配置文件：/etc/man.config|man_db.conf<br><br>&emsp;&emsp;&emsp;&emsp;<code>MANPATH/PATH/TO/SOMEWHERE指明man文搜索位置</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>man -M/PATH/TO/SOMEWHERE  COMMAND：到指定位置一下搜索</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>COMMAND命令的手册页并显示</code><br><br>&emsp;&emsp;中文man需安装包man-pages-zh-CN<br><br>&emsp;&emsp;man命令的操作方法：使用less命令实现<br><br>&emsp;&emsp;&emsp;&emsp;<code>space，^v，^f，^F：向文件尾翻屏</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>b，^b：向文件首部翻屏</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>d，^d：向文件尾部翻半屏</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>u，^u：向文件首部翻半屏</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>RETURN，^N，e，^Eorjor  ^J：上向文件尾部翻一行   y or ^ Y or ^P or k</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>or  ^K：向文件首部翻一行</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>q：退出</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>#：跳转至第#行</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>1G：回到文件首部</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>G：翻至文件尾部</code><br></p><h3 id="man-章节"><a href="#man-章节" class="headerlink" title="man 章节"></a>man 章节</h3><p>&emsp;&emsp;1：用户命令<br><br>&emsp;&emsp;2：系统调用<br><br>&emsp;&emsp;3：C库调用<br><br>&emsp;&emsp;4：设备文件及特殊文件<br><br>&emsp;&emsp;5：配置文件格式<br><br>&emsp;&emsp;6：游戏<br><br>&emsp;&emsp;7：杂项<br><br>&emsp;&emsp;8：管理类的命令<br><br>&emsp;&emsp;9：Linux内核API<br></p><h3 id="man-帮助"><a href="#man-帮助" class="headerlink" title="man 帮助"></a>man 帮助</h3><p>&emsp;&emsp;查看man手册页<br><br>&emsp;&emsp;&emsp;&emsp;<code>man[章节]keyword</code><br><br>&emsp;&emsp;列出所有帮助<br><br>&emsp;&emsp;&emsp;&emsp;<code>man-a keyword</code><br><br>&emsp;&emsp;搜索man手册<br><br>&emsp;&emsp;&emsp;&emsp;<code>man -k keyword列出所有匹配的页面</code><br><br>&emsp;&emsp;使用whatis数据库<br><br>&emsp;&emsp;相当于whatis<br><br>&emsp;&emsp;&emsp;&emsp;<code>man-f keyword</code><br><br>&emsp;&emsp;打印man帮助文件的路径<br><br>&emsp;&emsp;&emsp;&emsp;<code>man -w[章节]keyword</code><br></p><h3 id="man-搜索"><a href="#man-搜索" class="headerlink" title="man 搜索"></a>man 搜索</h3><h4 id="KEYWORD"><a href="#KEYWORD" class="headerlink" title="KEYWORD:"></a>KEYWORD:</h4><p>&emsp;&emsp;以KEYWORD指定的字符串为关键字，从当前位置向文件尾部搜索；不区分字符大小写<br><br>&emsp;&emsp;n：跟搜索命令同方向，下一个<br><br>&emsp;&emsp;&emsp;&emsp;N：跟搜索命令反方向，上一个<br><br>&emsp;&emsp;&emsp;&emsp;n：下一个<br><br>&emsp;&emsp;&emsp;&emsp;N：上一个<br><br>&emsp;&emsp;?KEYWORD.<br><br>&emsp;&emsp;&emsp;&emsp;以KEYWORD指定的字符串为关键字，从当前位置向文件首部搜索符大小写，不区分字<br></p><h3 id="bash-的快捷键"><a href="#bash-的快捷键" class="headerlink" title="bash 的快捷键"></a>bash 的快捷键</h3><p>&emsp;&emsp;Ctrl+w&emsp;&emsp;         从光标处向左删除至单词首<br><br>&emsp;&emsp;Alt+d &emsp;&emsp;         从光标处向右删除至单词尾<br><br>&emsp;&emsp;Ctrl+d &emsp;&emsp;        删除光标处的一个字符<br><br>&emsp;&emsp;Ctrl+h  &emsp;&emsp;      删除光标前的一个字符<br><br>&emsp;&emsp;Ctrl+y &emsp;&emsp;        将删除的字符粘贴至光标后<br><br>&emsp;&emsp;Alt+c&emsp;&emsp;          从光标处开始向右更改为首字母大写的单词<br><br>&emsp;&emsp;Alt+u &emsp;&emsp;         从光标处开始，将右边一个单词更改为大写<br><br>&emsp;&emsp;Alt+l &emsp;&emsp;         从光标处开，将右边一个单词更改为小写<br><br>&emsp;&emsp;Ctrl+t&emsp;&emsp;         交换光标处和之前的字符位置<br><br>&emsp;&emsp;Alt+t &emsp;&emsp;         交换光标处和之前的单词位置<br><br>&emsp;&emsp;Alt+N&emsp;&emsp;         提示输入指定字符后，重复显示该字符N次<br><br>&emsp;&emsp;注意：Alt组合决捷键经常和其它软件冲突<br><br>&emsp;&emsp;Ctrl+l &emsp;&emsp;        清屏，相当于clear命令<br><br>&emsp;&emsp;Ctrl+o&emsp;&emsp;         执行当前命令，并重新显示本命令<br><br>&emsp;&emsp;Ctrl+s &emsp;&emsp;        阻止屏幕输出，锁定<br><br>&emsp;&emsp;Ctrl+q  &emsp;&emsp;       允许屏幕输出<br><br>&emsp;&emsp;Ctrl+c  &emsp;&emsp;       终止命令<br><br>&emsp;&emsp;Ctrl+z  &emsp;&emsp;       挂起命令<br><br>&emsp;&emsp;Ctrl+a  &emsp;&emsp;      光标移到命令行首，相当于Home<br><br>&emsp;&emsp;Ctrl+e   &emsp;&emsp;     光标移到命令行尾，相当于End<br><br>&emsp;&emsp;Ctrl+f  &emsp;&emsp;      光标向右移动一个字符<br><br>&emsp;&emsp;Ctrl+b  &emsp;&emsp;     光标向左移动一个字符<br><br>&emsp;&emsp;Alt+f  &emsp;&emsp;       光标向右移动一个单词尾<br><br>&emsp;&emsp;Alt+b  &emsp;&emsp;       光标向左移动“个单词首<br><br>&emsp;&emsp;Ctrl+xx  &emsp;&emsp;     光标在命令行首和光标之间移动<br><br>&emsp;&emsp;Ctrl+u   &emsp;&emsp;     从光标处删除至命令行首<br><br>&emsp;&emsp;Ctrl+k   &emsp;&emsp;    从光标处删除至命令行尾<br><br>&emsp;&emsp;Alt+r   &emsp;&emsp;      删除当前整行<br></p><h3 id="gnome-terminal"><a href="#gnome-terminal" class="headerlink" title="gnome-terminal"></a>gnome-terminal</h3><p>&emsp;&emsp;应用程序-&gt;附件-&gt;终端<br><br>&emsp;&emsp;支持多个”标签”  shell的图形化终端模拟器<br><br>&emsp;&emsp;&emsp;&emsp;Ctrl-Shift-n创建新窗口<br><br>&emsp;&emsp;&emsp;&emsp;Ctrl-Shift-q关闭当前窗口<br><br>&emsp;&emsp;&emsp;&emsp;Ctrl-Shift-t创建一个标签页<br><br>&emsp;&emsp;&emsp;&emsp;Ctrl-Shift-w关闭一个标签页<br><br>&emsp;&emsp;&emsp;&emsp;Ctrl-PaUp/PgUn切换到下一个/前一个标签页<br><br>&emsp;&emsp;&emsp;&emsp;Ctrl-Shift-c复制选中的文本<br><br>&emsp;&emsp;&emsp;&emsp;Ctrl-Shift-v把文本粘帖到当前光标处<br></p><h3 id="命令历史相关环境变量"><a href="#命令历史相关环境变量" class="headerlink" title="命令历史相关环境变量"></a>命令历史相关环境变量</h3><p>&emsp;&emsp;HISTSIZE：命令历史记录的条数<br><br>&emsp;&emsp;HISTFILE：指定历史文件，默认为~/.bash_history<br><br>&emsp;&emsp;HISTFILESIZE：命令历史文件记录历史的条数<br><br>&emsp;&emsp;HISTTIMEFORMAT=“%F%TI” 显示日寸间<br><br>&emsp;&emsp;HISTIGNORE=“strl:str2*:…”  忽略strl命令，str2开头的历史<br><br>&emsp;&emsp;控制命令历史的记录方式：<br></p><h4 id="环境变量HISTCONTROL"><a href="#环境变量HISTCONTROL" class="headerlink" title="环境变量HISTCONTROL"></a>环境变量HISTCONTROL</h4><p>&emsp;&emsp;ignoredups默认，忽略重复的命令，连续且相同为重复<br><br>&emsp;&emsp;ignorespace忽略所有以空白开头的命令<br><br>&emsp;&emsp;ignoreboth相当于ignoredups，ignorespace的组合<br><br>&emsp;&emsp;erasedups删除重复命令<br><br>&emsp;&emsp;export变量名=“值”<br><br>&emsp;&emsp;存放在/etc/profile或～/.bash_profile<br></p><h2 id="二-info"><a href="#二-info" class="headerlink" title="(二)info"></a>(二)info</h2><p>&emsp;&emsp;man常用于命令参考GNU工具info适合通用文档参考<br><br>&emsp;&emsp;没有参数列出所有的页面<br><br>&emsp;&emsp;info页面的结构就像一个网站<br><br>&emsp;&emsp;每一页分为点<br><br>&emsp;&emsp;链接节点之前<br><br>&emsp;&emsp;info[命令]<br></p><h3 id="导航info页面"><a href="#导航info页面" class="headerlink" title="导航info页面"></a>导航info页面</h3><p>&emsp;&emsp;方向键，PgUp，PgDn导航<br><br>&emsp;&emsp;Tab键移动到下一个链接<br><br>&emsp;&emsp;d显示主题目录<br><br>&emsp;&emsp;Home显示主题首部<br><br>&emsp;&emsp;Enter进入选定链接<br><br>&emsp;&emsp;n/p/u/l进入下/前/上一层/最后一个链接<br><br>&emsp;&emsp;s文字文本搜索<br><br>&emsp;&emsp;q退出info<br></p><h2 id="（三）通过本地文档获取帮助"><a href="#（三）通过本地文档获取帮助" class="headerlink" title="（三）通过本地文档获取帮助"></a>（三）通过本地文档获取帮助</h2><p>&emsp;&emsp;System-&gt;help（centos6）<br><br>&emsp;&emsp;Applications-&gt;documentation-&gt;help（centos7）<br><br>&emsp;&emsp;&emsp;&emsp;提供的官方使用指南和发行注记<br><br>&emsp;&emsp;/usr/share/doc目录<br><br>&emsp;&emsp;多数安装了的软件包的子目录，包括了这些软件的相关原理说明<br><br>&emsp;&emsp;常见文当：README INSTALL CHANGES<br><br>&emsp;&emsp;不适合其它地方的文档的位置<br><br>&emsp;&emsp;&emsp;&emsp;配置文件范例<br><br>&emsp;&emsp;&emsp;&emsp;HTML/PDF/PS格式的文档<br><br>&emsp;&emsp;&emsp;&emsp;授权书详情<br></p><h2 id="（四）通过在线文档获取帮助"><a href="#（四）通过在线文档获取帮助" class="headerlink" title="（四）通过在线文档获取帮助"></a>（四）通过在线文档获取帮助</h2><p>&emsp;&emsp;第三方应用官方文档<br><br>&emsp;&emsp;<a href="http://www.nginx.org" target="_blank" rel="noopener">http://www.nginx.org</a><br><br>&emsp;&emsp;<a href="http://tomcat.apache.org" target="_blank" rel="noopener">http://tomcat.apache.org</a><br><br>&emsp;&emsp;<a href="http://www.python.org" target="_blank" rel="noopener">http://www.python.org</a><br><br>&emsp;&emsp;通过发行版官方的文档光盘或网站可以获得<br><br>&emsp;&emsp;安装指南、部署指南、虚拟化指南等<br><br>&emsp;&emsp;户红帽知识库和官方在线文档<br><br>&emsp;&emsp;&emsp;&emsp;<a href="http://kbase.redhat.com" target="_blank" rel="noopener">http://kbase.redhat.com</a><br><br>&emsp;&emsp;&emsp;&emsp;<a href="http://www.redhat.com/docs" target="_blank" rel="noopener">http://www.redhat.com/docs</a><br><br>&emsp;&emsp;&emsp;&emsp;<a href="http://access.redhat.com" target="_blank" rel="noopener">http://access.redhat.com</a><br></p><h3 id="红帽全球技术支持服务"><a href="#红帽全球技术支持服务" class="headerlink" title="红帽全球技术支持服务"></a>红帽全球技术支持服务</h3><p>&emsp;&emsp;rhn.redhat.com或者本地卫星服务器/代理服务器<br><br>&emsp;&emsp;基于网络管理的服务器<br><br>&emsp;&emsp;RHN代理服务器为RHN流量提供缓存<br><br>&emsp;&emsp;RHN卫星服务器提供自主的RHN<br><br>&emsp;&emsp;RHN账户<br><br>&emsp;&emsp;为及其注册和基于网络管理的RHN用户<br><br>&emsp;&emsp;用于系统自动验证的系统旧<br><br>&emsp;&emsp;sosreport<br><br>&emsp;&emsp;收集所有系统上的日志信息的工具，并自动打成压缩包, 方便技术支持人员和红帽全球支持提供分析问题依据<br></p><h3 id="网站和搜索"><a href="#网站和搜索" class="headerlink" title="网站和搜索"></a>网站和搜索</h3><p>&emsp;&emsp;<a href="http://tldp.org" target="_blank" rel="noopener">http://tldp.org</a><br><br>&emsp;&emsp;<a href="http://www.slideshare.net" target="_blank" rel="noopener">http://www.slideshare.net</a><br><br>&emsp;&emsp;<a href="http://www.google.com" target="_blank" rel="noopener">http://www.google.com</a><br><br>&emsp;&emsp;Openstack filetype:pdf<br><br>&emsp;&emsp;rhca site:redhat.com/docs<br></p><h3 id="–help-和-h选项"><a href="#–help-和-h选项" class="headerlink" title="–help 和 -h选项"></a>–help 和 -h选项</h3><p>&emsp;&emsp;显示用法总结和参数列表<br><br>&emsp;&emsp;使用的大多数，但并非所有的<br><br>&emsp;&emsp;示例：<br><br>&emsp;&emsp;<code>date--help</code><br><br>&emsp;&emsp;<code>Usage：date[OPTION]...[+FORMAT]or:date[-u|--utc|--universal][MMDDhhmm[[CC]YY][.ss]]</code><br><br>&emsp;&emsp;<code>[ ]表示可选项</code><br><br>&emsp;&emsp;<code>CAPS或&lt; &gt;表示变化的数据</code><br><br>&emsp;&emsp;<code>…表示一个列表</code><br><br>&emsp;&emsp;<code>x|y|z的意思是“x或y或z”</code><br><br>&emsp;&emsp;<code>-abc的意思是-a-b-c</code><br><br>&emsp;&emsp;<code>{ }表示分组</code><br></p><h3 id="whatis"><a href="#whatis" class="headerlink" title="whatis"></a>whatis</h3><p>&emsp;&emsp;显示命令的简短描述<br><br>&emsp;&emsp;使用数据库<br><br>&emsp;&emsp;刚安装后不可立即使用<br><br>&emsp;&emsp;makewhatis|mandb制作数据库<br><br>&emsp;&emsp;使用示例：<br><br>&emsp;&emsp;&emsp;&emsp;<code>whatis cal或man –f cal</code><br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>六、Linux使用技巧和帮助信息获取</title>
      <link href="/2020/02/24/%E5%85%AD%E3%80%81Linux%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E5%92%8C%E5%B8%AE%E5%8A%A9%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96/"/>
      <url>/2020/02/24/%E5%85%AD%E3%80%81Linux%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E5%92%8C%E5%B8%AE%E5%8A%A9%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）命令行扩展、被括起来的集合"><a href="#（一）命令行扩展、被括起来的集合" class="headerlink" title="（一）命令行扩展、被括起来的集合"></a>（一）命令行扩展、被括起来的集合</h2><h3 id="命令行扩展：-或"><a href="#命令行扩展：-或" class="headerlink" title="命令行扩展：$( ) 或 ``"></a>命令行扩展：$( ) 或 ``</h3><p>&emsp;&emsp;把一个命令的输出打印给另一个命令的参数<br><br>&emsp;&emsp;&emsp;&emsp;<code>echo &quot;This system&#39;s name is $(hostname)”</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>This system’s name is server1.example.com</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>echo “i am</code>whoami<code>”</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>i am root</code><br></p><h3 id="括号扩展："><a href="#括号扩展：" class="headerlink" title="括号扩展：{}"></a>括号扩展：{}</h3><p>&emsp;&emsp;打印重复字符串的简化形式<br><br>&emsp;&emsp;&emsp;&emsp;<code>echo file{1,3,5}</code><br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code>file1 file3 file5</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>rm –f file{1,3,5}</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>echo{1…10}</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>echo{a..z}</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>echo{000..20..2}</code><br><br>&emsp;&emsp;注意：“ ”只能识别变量，不能识别命令；‘ ’不能识别变量也不能识别命令只能输出字符串。``既能识别变量，也能识别命令，当一个命令要调用另一个命令的输出信息时，要把被引用的命令放在反向单引号里面。<br></p><h3 id="tab-键"><a href="#tab-键" class="headerlink" title="tab 键"></a>tab 键</h3><h4 id="命令补全"><a href="#命令补全" class="headerlink" title="命令补全"></a>命令补全</h4><pre><code>   内部命令：   外部命令：bash根据PATH环境变量定义的路径，自左而右在每个路径搜寻以给定命令名命名的文件，第一次找到的命令即为要执行的命令。   用户给定的字符串只有一条准一对应的命令，直接补全，否则，再次Tab会给出列表。</code></pre><h4 id="路径补全"><a href="#路径补全" class="headerlink" title="路径补全"></a>路径补全</h4><pre><code>   把用户给出的字符串当做路径开头，并在其指定上级目录下搜索以指定的字符串开头的文件名   如果惟一：则直接补全   否则：再次Tab给出列表</code></pre><h4 id="双击tab键及调用历史参数"><a href="#双击tab键及调用历史参数" class="headerlink" title="双击tab键及调用历史参数"></a>双击tab键及调用历史参数</h4><p>&emsp;&emsp;command  2Tab所有子命令或文件补全<br><br>&emsp;&emsp;string2Tab  以string开头命令<br><br>&emsp;&emsp;/2Tab   显示所有根目录下一级目录，包括隐藏目录<br><br>&emsp;&emsp;./2Tab   当前目录下子目录，包括隐藏目录<br><br>&emsp;&emsp;* 2Tab  当前目录下子目录，不包括隐藏目录<br><br>&emsp;&emsp;～2Tab  所有用户列表<br><br>&emsp;&emsp;$2Tab  所有变量<br><br>&emsp;&emsp;@2Tab  /etc/hosts记录（centos7不支持）<br><br>&emsp;&emsp;=2b  相当于ls-A（centos7不支持）<br></p><h4 id="命令行历史"><a href="#命令行历史" class="headerlink" title="命令行历史"></a>命令行历史</h4><ul><li>保存你输入的命令历史。可以用它来重复执行命令</li><li>登录shell时，会读取命令历史文件中记录下的命令~/.bashhistory</li><li>登录进shell后新执行的命令只会记录在缓存中；这些命令会在用户退出时”追加”至命令历史文件中</li><li>重复前一个命令，有4种方法<br><br>&emsp;&emsp;重复前一个命令使用上方向键，并回车执行<br><br>&emsp;&emsp;按！！并回车执行<br><br>&emsp;&emsp;输入!-1并回车执行<br><br>&emsp;&emsp;按Ctrl+P并回车执行<br></li><li>!:0  执行前一条命令（去除参数）</li><li>Ctrl+n 显示当前历史中的下一条命令，但不执行</li><li>Ctrl+j 执行当前命令</li><li>!n 执行history命令输出对应序号n的命令</li><li>!-n 执行history历史中倒数第n个命令</li><li>!string 重复前一个以    “string”开头的命令 </li><li>!?string 重复前一个包含string的命令</li><li>!string:p 仅打印命令历史，而不执行</li><li>!$:p 打印输出！$（上一条命令的最后一个参数）的内容</li><li>!<em>:p 打印输出！</em>（上一条命令的所有参数）的内容</li><li>^string 删除上一条命令中的第一个string</li><li>^string1^string2 将上一条命令中的第一个string1替换为string2</li><li>!:gs/string1/string2将上一条命令中所有的string1都替换为string2</li><li>使用up（向上）和down（向下）键来上下浏览从前输入的命令</li><li>ctrl-r来在命令历史中搜索命令<br></li><li>&emsp;&emsp;（reverse-i-search）<br></li><li>Ctrl+g：从历史扌叟索模式退出</li><li>要重新调用前一个命令中最后一个参数<br><br>&emsp;&emsp;！$表示<br><br>&emsp;&emsp;Esc点击Esc键后松开，然后点击.键）<br><br>&emsp;&emsp;Alt+．（按住Alt键的同时点击.键）<br></li><li>command  !^ 利用上一一个命令的第一个参数做cmd的参数</li><li>command  !$ 利用上一个命令的最后一个参数做cmd的参数</li><li>command  !* 利用上一个命令的全部参数做cmd的参数</li><li>command  !:n利用上一个命令的第n个参数做cmd的参数</li><li>command  !n:^调用第n条命令的第一个参数</li><li>command  !n:$调用第n条命令的最后一个参数</li><li>command  !n:m调用第n条命令的第m个参数</li><li>command  !n:*调用第n条命令的所有参数</li><li>command !string:^ 从命令历史中扌叟索以string开头的命令，并获取它的第一个参数</li><li>command !string:$从命令历史中搜索以string开头的命令并获取它的最后一个参数</li><li>command !string:n从命令历史中搜索以string开头的命令，并获取它的第n个参数</li><li>command !string:*从命令历史中搜索以string开头的命令，并获取它的所有参数<h4 id="命令history"><a href="#命令history" class="headerlink" title="命令history"></a>命令history</h4>&emsp;&emsp;<code>history [-c] [-d offset] [n]</code><br><br>&emsp;&emsp;<code>history -anrw [filename]</code><br><br>&emsp;&emsp;<code>history –ps arg [arg...]</code><br><br>&emsp;&emsp;-c.清空命令历史<br><br>&emsp;&emsp;-d offset：删除历史中指定的第offset个命令<br><br>&emsp;&emsp;n:显示最近的n条历史<br><br>&emsp;&emsp;-a:追加本次会话执行的命令历史列表至历史文件<br><br>&emsp;&emsp;-r读历史文件附加到历史列表<br><br>&emsp;&emsp;-w:保存历史列表到指定的历史文件<br><br>&emsp;&emsp;-n:读历史文件中未读过的行到历史列表<br><br>&emsp;&emsp;-p:展开历史参数成多行，但不存在历史列表中<br><br>&emsp;&emsp;-s:展开历史参数成一行，附加在历史列表后<br><h2 id="二-获得帮助"><a href="#二-获得帮助" class="headerlink" title="(二)获得帮助"></a>(二)获得帮助</h2>&emsp;&emsp;获取帮助的能力决定了技术的能力！<br><br>&emsp;&emsp;多层次的帮助<br><br>&emsp;&emsp;<code>whatis</code><br><br>&emsp;&emsp;<code>command --help</code><br><br>&emsp;&emsp;<code>man and info</code><br><br>&emsp;&emsp;<code>/usr/share/doc/</code><br><br>&emsp;&emsp;<code>Red Hat documentation</code><br><br>&emsp;&emsp;<code>其它网站和s搜索</code><br><h4 id="whatis"><a href="#whatis" class="headerlink" title="whatis"></a>whatis</h4>&emsp;&emsp;显示命令的简短描述<br><br>&emsp;&emsp;使用数据库<br><br>&emsp;&emsp;刚安装后不可立即使用<br><br>&emsp;&emsp;makewhatis|mandb制作娄划居库<br><br>&emsp;&emsp;使用示例<br><br>&emsp;&emsp;<code>whatis cal或man—f cal</code><br><h4 id="命令帮助"><a href="#命令帮助" class="headerlink" title="命令帮助"></a>命令帮助</h4>&emsp;&emsp;内部命令：help COMMAND<br><br>&emsp;&emsp;man bash<br><br>&emsp;&emsp;外部命令：<br><br>&emsp;&emsp;（1）CPMMAND –help<br><br>&emsp;&emsp;&emsp;&emsp;<code>COMMAND -h</code><br><br>&emsp;&emsp;（2）使用手册(manual)<br><br>&emsp;&emsp;&emsp;&emsp;<code>man COMMAND</code><br><br>&emsp;&emsp;（3）信息页<br><br>&emsp;&emsp;&emsp;&emsp;<code>info COMMAND</code><br><br>&emsp;&emsp;（4）程序自身的帮助文档<br><br>&emsp;&emsp;&emsp;&emsp;<code>README</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>INSTALL</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>ChangeLog</code><br><br>&emsp;&emsp;（5）程序官方文档<br><br>&emsp;&emsp;&emsp;&emsp;官方站点：Documentation<br><br>&emsp;&emsp;（6）发行版的官方文档<br><br>&emsp;&emsp;（7）Google</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五、Linux别名管理、日期和时钟设置和简单命令</title>
      <link href="/2020/02/23/%E4%BA%94%E3%80%81Linux%E5%88%AB%E5%90%8D%E7%AE%A1%E7%90%86%E3%80%81%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%92%9F%E8%AE%BE%E7%BD%AE%E5%92%8C%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/02/23/%E4%BA%94%E3%80%81Linux%E5%88%AB%E5%90%8D%E7%AE%A1%E7%90%86%E3%80%81%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%92%9F%E8%AE%BE%E7%BD%AE%E5%92%8C%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）Linux别名管理"><a href="#（一）Linux别名管理" class="headerlink" title="（一）Linux别名管理"></a>（一）Linux别名管理</h2><h3 id="命令别名"><a href="#命令别名" class="headerlink" title="命令别名"></a>命令别名</h3><h4 id="显示当前shell进不斤有可用的命令别名"><a href="#显示当前shell进不斤有可用的命令别名" class="headerlink" title="显示当前shell进不斤有可用的命令别名"></a>显示当前shell进不斤有可用的命令别名</h4><p>&emsp;&emsp;<code>alias</code></p><h4 id="定义别名NAME，其相当于执行命令VALUE"><a href="#定义别名NAME，其相当于执行命令VALUE" class="headerlink" title="定义别名NAME，其相当于执行命令VALUE"></a>定义别名NAME，其相当于执行命令VALUE</h4><p>&emsp;&emsp;<code>alias NAME=&#39;VALUE&#39;</code></p><h4 id="在命令行中定义的别名，仅对当前shell进程有效"><a href="#在命令行中定义的别名，仅对当前shell进程有效" class="headerlink" title="在命令行中定义的别名，仅对当前shell进程有效"></a>在命令行中定义的别名，仅对当前shell进程有效</h4><p>&emsp;&emsp;如果想永久有效，要定义在配置文件中 <br><br>&emsp;&emsp;仅对当前用户：<code>～/.bashrc</code><br><br>&emsp;&emsp;对所有用户有效：<code>/etc/bashrc</code><br><br>&emsp;&emsp;编辑配置给出的新配置不会立即生效<br><br>&emsp;&emsp;bash进程重新读取配置文件&lt;br&lt;</p><p>&emsp;&emsp;<code>source /path/to/configfile</code><br><br>&emsp;&emsp;<code>·/path/to/configfile</code><br></p><h4 id="撤消别名：unalias"><a href="#撤消别名：unalias" class="headerlink" title="撤消别名：unalias"></a>撤消别名：unalias</h4><p>&emsp;&emsp;<code>unalias [-a] name[name…]</code><br><br>&emsp;&emsp;<code>-a取消所有别名</code><br></p><h4 id="如果别名同原命令同名，如果要执行原命令，可使用"><a href="#如果别名同原命令同名，如果要执行原命令，可使用" class="headerlink" title="如果别名同原命令同名，如果要执行原命令，可使用"></a>如果别名同原命令同名，如果要执行原命令，可使用</h4><p>&emsp;&emsp;<code>\ALIASNAME</code><br><br>&emsp;&emsp;<code>“A凵ASNAME”</code><br><br>&emsp;&emsp;<code>‘ALIASNAME’</code><br><br>&emsp;&emsp;<code>command ALIASNAME</code><br><br>&emsp;&emsp;<code>/path/commmand</code><br></p><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><h4 id="COMMAND-OPTIONS…-ARGUMENTS…"><a href="#COMMAND-OPTIONS…-ARGUMENTS…" class="headerlink" title="COMMAND [OPTIONS…] [ARGUMENTS…]"></a>COMMAND [OPTIONS…] [ARGUMENTS…]</h4><p>&emsp;&emsp;选项：用于启用或关闭命令的某个或某些功能<br><br>&emsp;&emsp;&emsp;&emsp;短选项：-c 还例如：-l，-h<br><br>&emsp;&emsp;&emsp;&emsp;长选项：–word例如：–all,–human-readable<br><br>&emsp;&emsp;参数：命令的作用对象，比如文件名用户名等<br><br>&emsp;&emsp;注意：<br></p><ul><li><p>多个选项以及多参数和命令之间使用空白字符分隔</p></li><li><p>取消和结束命令执行：ctrl+c，ctrl+d</p></li><li><p>多个命令可以用; 符号分开</p></li><li><p>一个命令可以用\分成多行</p><h2 id="二-日期和时间"><a href="#二-日期和时间" class="headerlink" title="(二)日期和时间"></a>(二)日期和时间</h2><h3 id="Linux的两种时钟"><a href="#Linux的两种时钟" class="headerlink" title="Linux的两种时钟"></a>Linux的两种时钟</h3><p>&emsp;&emsp;系统时钟：由Linux内核通过CPU的工作频率进行的<br><br>&emsp;&emsp;硬件时钟：主板<br></p><h4 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h4><p>&emsp;&emsp;date显示和设置系统时间<br><br>&emsp;&emsp;&emsp;&emsp;<code>date+％s</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>date-d@1509536033</code><br><br>&emsp;&emsp;hwclock，clock:显示硬件时钟<br><br>&emsp;&emsp;&emsp;&emsp;<code>-s,--hctosys以硬件时钟为准，校正系统时钟</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-w,--systohc以系统时钟为准，校正硬件时钟</code><br><br>&emsp;&emsp;时区：/etc/localtime<br><br>&emsp;&emsp;显示日历：cal –y<br><br>&emsp;&emsp;查看当前系统时区：timedatectl status.<br><br><img src="https://i1.fuimg.com/709978/c563b769249955b6.png" alt=""><br><br>修改系统时区命令：<code>timedatectl set-timezone +时区名</code><br></p><h2 id="三-简单命令"><a href="#三-简单命令" class="headerlink" title="(三)简单命令"></a>(三)简单命令</h2><p>&emsp;&emsp;关机：halt, poweroff<br><br>&emsp;&emsp;重启reboot<br><br>&emsp;&emsp;&emsp;&emsp;-f:强制，不调用shutdown<br><br>&emsp;&emsp;&emsp;&emsp;-p:切断电源<br><br>&emsp;&emsp;关机或重启：shutdown<br><br>&emsp;&emsp;&emsp;&emsp;<code>shutdown [OPTION]...  TIME[MESSAGE]</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-r reboot</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-h：halt</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>-c：cancel</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>TIME：无指定，默认相当于+1</code><br><br>&emsp;&emsp;&emsp;&emsp;now：<code>立刻，相当于+0</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>+m：相对时间表示法，几分钟之后；例如+3</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>hh:mm：绝对时间表示，指明具体时间</code><br><br>&emsp;&emsp;screen命令<br><br>&emsp;&emsp;创建新screen会话<br><br>&emsp;&emsp;&emsp;&emsp;<code>screen -S[SESSION]</code><br><br>&emsp;&emsp;加入screen会话<br><br>&emsp;&emsp;&emsp;&emsp;<code>screen -X[SESSION]</code><br><br>&emsp;&emsp;退出并关闭screen会话<br><br>&emsp;&emsp;&emsp;&emsp;<code>exit</code><br><br>&emsp;&emsp;剥离当前screen会话<br><br>&emsp;&emsp;&emsp;&emsp;<code>Ctrl+a,d</code><br><br>&emsp;&emsp;显示所有已经打开的screen会话<br><br>&emsp;&emsp;&emsp;&emsp;<code>screen -ls</code><br><br>&emsp;&emsp; 恢复某screen会话<br><br>&emsp;&emsp;&emsp;&emsp;<code>screen -r[SESSION]</code><br><br>&emsp;&emsp;注意：可以在开始长时间命令之前使用screen命令再开始会话，这样可以避免断网等情况下命令终止的问题。<br><br>&emsp;&emsp;echo命令<br><br>&emsp;&emsp;功能：显示字符<br><br>&emsp;&emsp;语法：echo [-neE][字符串]|<br><br>&emsp;&emsp;说明：echo会将输入的字符串送往标准输出。输出的字符串间以空白字符隔开，并在最后加上行号<br><br>&emsp;&emsp;选项：<br></p></li><li><p>-E（默认）不支持\解释功能</p></li><li><p>-n不自动换行</p></li><li><p>-e启用\字符的解释功能<br><br>&emsp;&emsp;显示变量<br><br>&emsp;&emsp;&emsp;&emsp;<code>echo &quot;$VAR_NAME”      变量会替换/弱引用</code><br><br>&emsp;&emsp;&emsp;&emsp;<code>echo ‘$VAR_NAME’       变量不会替换，强引用</code><br><br>启用命令项-e，若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文字处理<br></p></li><li><p>\a发出警告声</p></li><li><p>\b退格键</p></li><li><p>\c最后不加上换行符号</p></li><li><p>\n换行且光标移至行首</p></li><li><p>\r回车，即光标移至行首，但不换行</p></li><li><p>\t插入tab</p></li><li><p>\插入\字符</p></li><li><p>\0nnn插入nnn（八进制）所代表的ASCII字符<br><br>&emsp;&emsp;echo-e’\033[43;31;5mmagedu\033[0m’<br></p></li><li><p>\xHH插入HH（十六进制）所代表的ASCII字</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四、Linux使用和基础操作</title>
      <link href="/2020/02/22/%E5%9B%9B%E3%80%81Linux%E4%BD%BF%E7%94%A8%E5%92%8C%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/02/22/%E5%9B%9B%E3%80%81Linux%E4%BD%BF%E7%94%A8%E5%92%8C%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）Linux基础操作命令"><a href="#（一）Linux基础操作命令" class="headerlink" title="（一）Linux基础操作命令"></a>（一）Linux基础操作命令</h2><p>&emsp;&emsp;如果你使用的是桌面版的CentOS系统，在每次开机进入系统到手动输入root的用户名以及密码，如果你不想重复这一步，我们这里有一个简单的方法可以帮助你解决这一问题。在这里你只需要修改一个文件就可以达到这个目的，我们可以接借助gedit这个工具来实现这个操作。在终端输入命令gedit /etc/gdm/custom.conf 对custom.conf文件进行直接编辑这里需要修改的是在[daemon]下面加入以下几条命令：AutomaticLoginEnable = true; AutomaticLogin = root; 便可以实现以root用户自动登陆。<br><br><img src="https://i2.tiimg.com/709978/51d6191781309c70.png" alt=""><br><br>&emsp;&emsp;如果在进入系统之后你用ifconfig或者ip a 查看IP地址时，你会发现这个时候并没有任何IP地址，这是因为CentOS系统中默认是禁用网卡的，这里我们同样可以使用gedit工具修改配置信息，让开机自动启用网卡，在终端输入命令 gedit /etc/sysconfig/network-scripts/ifcfg-ens33,注意这里的ens33是CentOS7中默认的网卡名称，其他系统或有差异，请根据实际系统来确定网卡名称。把最后一项ONBOOT = no 改为 yes即可。<br><br><img src="https://i2.tiimg.com/709978/1c02490f281d8463.png" alt=""><br><br>&emsp;&emsp;如果是字符集面就不能使用gedit命令，你应该使用字符界面的一些文本工具来编辑文本文件。<br></p><h2 id="（二）Linux基础说明"><a href="#（二）Linux基础说明" class="headerlink" title="（二）Linux基础说明"></a>（二）Linux基础说明</h2><h3 id="Linux用户登录"><a href="#Linux用户登录" class="headerlink" title="Linux用户登录"></a>Linux用户登录</h3><h4 id="root用户"><a href="#root用户" class="headerlink" title="root用户"></a>root用户</h4><p>&emsp;&emsp;一个特殊的管理帐户，也被称为超级用户,root已接近完整的系统控制，对系统损害几乎有无限的能力，除非必要，不要登录为root。<br></p><h4 id="普通（非特权）用户"><a href="#普通（非特权）用户" class="headerlink" title="普通（非特权）用户"></a>普通（非特权）用户</h4><p>&emsp;&emsp;权限有限，造成损害的能力比较有限。<br><br>&emsp;&emsp;Linux系统下并不是根据用户名称来确定用户的权限而是根据用户的ID，在Linux系统下超级用户的用户ID为0。在Linux下查询用户ID所用的命令为id -u。如下图所示，这里用户ID为0，所以是超级用户。<br><br><img src="https://i2.tiimg.com/709978/2f93e868876afa65.png" alt=""><br></p><h3 id="终端-terminal"><a href="#终端-terminal" class="headerlink" title="终端 terminal"></a>终端 terminal</h3><h4 id="设备终端"><a href="#设备终端" class="headerlink" title="设备终端"></a>设备终端</h4><p>&emsp;&emsp;键盘鼠标显示器</p><h4 id="物理终端（-dev-console）"><a href="#物理终端（-dev-console）" class="headerlink" title="物理终端（/dev/console）"></a>物理终端（/dev/console）</h4><p>&emsp;&emsp;控制台console</p><h4 id="虚拟终端（tty：teletypewriters，-dev-tty-为-1-6-）"><a href="#虚拟终端（tty：teletypewriters，-dev-tty-为-1-6-）" class="headerlink" title="虚拟终端（tty：teletypewriters，/dev/tty#  #为[1-6]）"></a>虚拟终端（tty：teletypewriters，/dev/tty#  #为[1-6]）</h4><p>&emsp;&emsp;tty可有n个，Ctrl+Alt+F [1-6]</p><h4 id="图形终端（-dev-tty7）startx-xwindows"><a href="#图形终端（-dev-tty7）startx-xwindows" class="headerlink" title="图形终端（/dev/tty7）startx, xwindows"></a>图形终端（/dev/tty7）startx, xwindows</h4><p>&emsp;&emsp;CentOS6：Ctrl+Alt+F7<br><br>&emsp;&emsp;CentOS7：在哪个终端启动，即位于哪个虚拟终端<br></p><h4 id="串行终端（-dev-ttyS-）"><a href="#串行终端（-dev-ttyS-）" class="headerlink" title="串行终端（/dev/ttyS#）"></a>串行终端（/dev/ttyS#）</h4><p>&emsp;&emsp;ttyS</p><h4 id="伪终端（pty：pseudo-tty，-dev-pts-）"><a href="#伪终端（pty：pseudo-tty，-dev-pts-）" class="headerlink" title="伪终端（pty：pseudo-tty，/dev/pts/#）"></a>伪终端（pty：pseudo-tty，/dev/pts/#）</h4><p>&emsp;&emsp;pty, SSH远程连接</p><h4 id="查看当前的终端设备：-tty"><a href="#查看当前的终端设备：-tty" class="headerlink" title="查看当前的终端设备：#tty"></a>查看当前的终端设备：#tty</h4><h4 id="在桌面版的Linux系统下可以通过快捷键ctrl-alt-F2打开字符终端-Alt-F1回到图形界面。用who命令可以查看当前登录的用户。"><a href="#在桌面版的Linux系统下可以通过快捷键ctrl-alt-F2打开字符终端-Alt-F1回到图形界面。用who命令可以查看当前登录的用户。" class="headerlink" title="在桌面版的Linux系统下可以通过快捷键ctrl+alt+F2打开字符终端,Alt+F1回到图形界面。用who命令可以查看当前登录的用户。"></a>在桌面版的Linux系统下可以通过快捷键ctrl+alt+F2打开字符终端,Alt+F1回到图形界面。用who命令可以查看当前登录的用户。</h4><p> ####<br><img src="https://i1.fuimg.com/709978/252296e3a9386e90.png" alt=""><br></p><h4 id="在终端输入whoami-可以查看当前登录的用户名。who-am-i-可以查看具体的登录终端。"><a href="#在终端输入whoami-可以查看当前登录的用户名。who-am-i-可以查看具体的登录终端。" class="headerlink" title="在终端输入whoami 可以查看当前登录的用户名。who am i 可以查看具体的登录终端。"></a>在终端输入whoami 可以查看当前登录的用户名。who am i 可以查看具体的登录终端。</h4><p><img src="https://i1.fuimg.com/709978/ca338021f1815db0.png" alt=""><br></p><h4 id="在终端输入w命令可以查看当前所有登录的用户。"><a href="#在终端输入w命令可以查看当前所有登录的用户。" class="headerlink" title="在终端输入w命令可以查看当前所有登录的用户。"></a>在终端输入w命令可以查看当前所有登录的用户。</h4><p><img src="https://i2.tiimg.com/709978/2ce91ccf0e40c40c.png" alt=""><br></p><h4 id="在终端输入init-数字便可以完成模式的切换。3代表字符终端模式，5代表桌面模式。"><a href="#在终端输入init-数字便可以完成模式的切换。3代表字符终端模式，5代表桌面模式。" class="headerlink" title="在终端输入init + 数字便可以完成模式的切换。3代表字符终端模式，5代表桌面模式。"></a>在终端输入init + 数字便可以完成模式的切换。3代表字符终端模式，5代表桌面模式。</h4><h4 id="在终端输入runlevel，可以查看当前的工作模式，如下图所示，N代表之前的工作模式，3是现在切换的模式。N代表是从开机之前一直是这个模式，如果之前切换过模式，那么这里的N会变成其他的数字。"><a href="#在终端输入runlevel，可以查看当前的工作模式，如下图所示，N代表之前的工作模式，3是现在切换的模式。N代表是从开机之前一直是这个模式，如果之前切换过模式，那么这里的N会变成其他的数字。" class="headerlink" title="在终端输入runlevel，可以查看当前的工作模式，如下图所示，N代表之前的工作模式，3是现在切换的模式。N代表是从开机之前一直是这个模式，如果之前切换过模式，那么这里的N会变成其他的数字。"></a>在终端输入runlevel，可以查看当前的工作模式，如下图所示，N代表之前的工作模式，3是现在切换的模式。N代表是从开机之前一直是这个模式，如果之前切换过模式，那么这里的N会变成其他的数字。</h4><p><img src="https://i1.fuimg.com/709978/9a9abef14cbb9f93.png" alt=""><br></p><h4 id="chvt-命令用于切换终端，命令格式为chvt-数字便可以完成终端切换，数字代表切换到第几个终端。"><a href="#chvt-命令用于切换终端，命令格式为chvt-数字便可以完成终端切换，数字代表切换到第几个终端。" class="headerlink" title="chvt 命令用于切换终端，命令格式为chvt + 数字便可以完成终端切换，数字代表切换到第几个终端。"></a>chvt 命令用于切换终端，命令格式为chvt + 数字便可以完成终端切换，数字代表切换到第几个终端。</h4><h3 id="交互式接口"><a href="#交互式接口" class="headerlink" title="交互式接口"></a>交互式接口</h3><h4 id="交互式接口：启动终端后，在终端设备附加一个交互式应用程序"><a href="#交互式接口：启动终端后，在终端设备附加一个交互式应用程序" class="headerlink" title="交互式接口：启动终端后，在终端设备附加一个交互式应用程序"></a>交互式接口：启动终端后，在终端设备附加一个交互式应用程序</h4><h4 id="GUI：Graphic-User-Interface"><a href="#GUI：Graphic-User-Interface" class="headerlink" title="GUI：Graphic User Interface"></a>GUI：Graphic User Interface</h4><p>&emsp;&emsp;X protocol, window manager, desktop<br><br>&emsp;&emsp;Desktop.<br><br>&emsp;&emsp;GNOME(C,图形库gtk)，<br><br>&emsp;&emsp;KDE(C++，图形库qt)<br><br>&emsp;&emsp;XFCE（轻量级桌面）<br></p><h4 id="CLI：Command-Line-Interface"><a href="#CLI：Command-Line-Interface" class="headerlink" title="CLI：Command Line Interface"></a>CLI：Command Line Interface</h4><p>&emsp;&emsp;shell程序sh(bourn史蒂夫.伯恩)csh tcsh ksh(korn) bash(bourn again shell)GPL zsh<br></p><h4 id="Shell是Linux系统的用户界面，提共了用户与内核进行交互操作的一种接口。它接收用户输入的命令弄把它送入内核去执行"><a href="#Shell是Linux系统的用户界面，提共了用户与内核进行交互操作的一种接口。它接收用户输入的命令弄把它送入内核去执行" class="headerlink" title="Shell是Linux系统的用户界面，提共了用户与内核进行交互操作的一种接口。它接收用户输入的命令弄把它送入内核去执行"></a>Shell是Linux系统的用户界面，提共了用户与内核进行交互操作的一种接口。它接收用户输入的命令弄把它送入内核去执行</h4><h4 id="shell也被称为Linux的命令解释器（command-interpreter）"><a href="#shell也被称为Linux的命令解释器（command-interpreter）" class="headerlink" title="shell也被称为Linux的命令解释器（command interpreter）"></a>shell也被称为Linux的命令解释器（command interpreter）</h4><h4 id="shell是一种高级程序设计语言"><a href="#shell是一种高级程序设计语言" class="headerlink" title="shell是一种高级程序设计语言"></a>shell是一种高级程序设计语言</h4><p><img src="https://i1.fuimg.com/709978/885c82eee5f07db0.png" alt=""><br></p><h3 id="bash-shell"><a href="#bash-shell" class="headerlink" title="bash shell"></a>bash shell</h3><h4 id="GNU-Bourne-Again-Shell-bash-是GNU计划中重要的工具软件之一目前也是Linux标准的shell，与sh兼容。"><a href="#GNU-Bourne-Again-Shell-bash-是GNU计划中重要的工具软件之一目前也是Linux标准的shell，与sh兼容。" class="headerlink" title="GNU Bourne-Again Shell (bash)是GNU计划中重要的工具软件之一目前也是Linux标准的shell，与sh兼容。"></a>GNU Bourne-Again Shell (bash)是GNU计划中重要的工具软件之一目前也是Linux标准的shell，与sh兼容。</h4><h4 id="显示当前使用的shell"><a href="#显示当前使用的shell" class="headerlink" title="显示当前使用的shell"></a>显示当前使用的shell</h4><p>&emsp;&emsp;echo${SHELL}<br></p><h4 id="显示当前系统使用的所有shell"><a href="#显示当前系统使用的所有shell" class="headerlink" title="显示当前系统使用的所有shell"></a>显示当前系统使用的所有shell</h4><p>&emsp;&emsp;cat/etc/shells<br><br>&emsp;&emsp;查看计算机你支持的shell类型，执行命令cat /etc/shells 便可以查看当前计算机支持的所有shell类型。shell类型的切换只需要输入你用命令查看出来支持的shell类型，例如/bin/csh/ 或者其他的都可以，推出当前类型的shell在终端输入exit便可以退出当前模式。注意，不同类型shell所使用的命令语句是不同的。<br><br><img src="https://i1.fuimg.com/709978/872dd69d47d86f0c.png" alt=""><br></p><h3 id="命令提示符"><a href="#命令提示符" class="headerlink" title="命令提示符"></a>命令提示符</h3><h4 id="命令提示符：prompt"><a href="#命令提示符：prompt" class="headerlink" title="命令提示符：prompt"></a>命令提示符：prompt</h4><p>&emsp;&emsp;[root@localhost～]#<br><br>&emsp;&emsp;#管理员      &emsp;&emsp;$普通用户<br></p><h4 id="显示提示符格式"><a href="#显示提示符格式" class="headerlink" title="显示提示符格式"></a>显示提示符格式</h4><p>&emsp;&emsp;[roolt@localhost～]#echo$PS1<br></p><h4 id="修改提示符格式"><a href="#修改提示符格式" class="headerlink" title="修改提示符格式"></a>修改提示符格式</h4><p><code>PS1 = “\e[1;5;41;33m\][\u@h\W]\\$\[\e[0m\]”</code><br><br><code>\e\033 \u当前用户</code><br><br><code>\h主机名简称 \H主机名</code><br><br><code>\w当前工作目录       \W当前工作目录基名</code><br><br><code>\t24小时时间格式      \T12小时时间格式</code><br><br><code>\！命令历史数          \#开机后命令历史数</code><br></p><h3 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h3><h4 id="输入命令后回车"><a href="#输入命令后回车" class="headerlink" title="输入命令后回车"></a>输入命令后回车</h4><p>&emsp;&emsp;提请shell程序找到键入命令所对应的可执行程序或代码，并由其分析后提交给内核分配资源将其运行起来<br></p><h4 id="在shell中可执行的命令有两类"><a href="#在shell中可执行的命令有两类" class="headerlink" title="在shell中可执行的命令有两类"></a>在shell中可执行的命令有两类</h4><p>&emsp;&emsp;内部命令：由shell自带的，而且通过某命令形式提供<br><br>&emsp;&emsp;&emsp;&emsp;help内部命令列表<br><br>&emsp;&emsp;&emsp;&emsp;enable cmd启用内部命令<br><br>&emsp;&emsp;&emsp;&emsp;enable—n cmd禁用内部命令<br><br>&emsp;&emsp;&emsp;&emsp;enable—n查看所有禁用的内部命令<br><br>&emsp;&emsp;外部命令：在文件系统路径下有对应的可执行程序文件查看路径：which-a |–skip-alias；whereis<br></p><h4 id="区别指定的命令是内部或外部命令"><a href="#区别指定的命令是内部或外部命令" class="headerlink" title="区别指定的命令是内部或外部命令"></a>区别指定的命令是内部或外部命令</h4><p>&emsp;&emsp;type COMMAND<br><br>&emsp;&emsp;可以通过输入type + 命令名称可以查看该命令是内部命令还是外部命令。<br><br>&emsp;&emsp;which可以查看所有外部命令的路径，如果有多个地址需要输入which -a可以显示所有路径。<br></p><h3 id="执行外部命令"><a href="#执行外部命令" class="headerlink" title="执行外部命令"></a>执行外部命令</h3><h4 id="Hash缓存表"><a href="#Hash缓存表" class="headerlink" title="Hash缓存表"></a>Hash缓存表</h4><p>&emsp;&emsp;系统初始hash表为空，当外部命令执行时，默认会从PATH路径下寻找该命令，找到后会将这条命令的路径记录到hash表中，当再次使用该命令时，shell解释器首先会查看hash表，存在将执行之，如果不存在，将会去PATH路径下寻找。利用hash缓存表可大大提高命令的调用速率<br></p><h4 id="hash常见用法"><a href="#hash常见用法" class="headerlink" title="hash常见用法"></a>hash常见用法</h4><p><code>hash             显示hash缓存</code><br><br><code>hash—|          显示hash缓存，可作为输入使用</code><br><br><code>hash—p path name将命令全路径path起别名为name</code><br><br><code>hash—t name     打印缓存中name的路径</code><br><br><code>hash—d name     清除name缓存</code><br><br><code>hash—r          清除缓存</code><br></p><h2 id="三、文件操作相关命令"><a href="#三、文件操作相关命令" class="headerlink" title="三、文件操作相关命令"></a>三、文件操作相关命令</h2><h4 id="1-查看当前文件夹下的所有文件以及文件夹命令：ls-a"><a href="#1-查看当前文件夹下的所有文件以及文件夹命令：ls-a" class="headerlink" title="1.查看当前文件夹下的所有文件以及文件夹命令：ls -a"></a>1.查看当前文件夹下的所有文件以及文件夹命令：ls -a</h4><p><img src="https://i1.fuimg.com/709978/62db76f08d6d5f05.png" alt=""><br></p><h4 id="2-新建文件命令：-gt-文件名，这里创建了一个文件名为fl的文件。"><a href="#2-新建文件命令：-gt-文件名，这里创建了一个文件名为fl的文件。" class="headerlink" title="2.新建文件命令：&gt; + 文件名，这里创建了一个文件名为fl的文件。"></a>2.新建文件命令：&gt; + 文件名，这里创建了一个文件名为fl的文件。</h4><p><img src="https://i1.fuimg.com/709978/0c7b4e065921aaf1.png" alt=""><br></p><h4 id="3-查看文件大小命令-ll-文件名，这里我们查看fl文件的大小。"><a href="#3-查看文件大小命令-ll-文件名，这里我们查看fl文件的大小。" class="headerlink" title="3.查看文件大小命令: ll + 文件名，这里我们查看fl文件的大小。"></a>3.查看文件大小命令: ll + 文件名，这里我们查看fl文件的大小。</h4><p><img src="https://i1.fuimg.com/709978/bd2eba978906597a.png" alt=""><br></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三、Linux系统使用和初始化配置</title>
      <link href="/2020/02/21/%E4%B8%89%E3%80%81Linux%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/02/21/%E4%B8%89%E3%80%81Linux%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）初始化配置"><a href="#（一）初始化配置" class="headerlink" title="（一）初始化配置"></a>（一）初始化配置</h2><p>&emsp;&emsp;在第一启动系统会进行相关检测，等所有检测通过之后我们便可以启动系统，在其中的一些设置我们按照默认设置即可。<br><br>&emsp;&emsp;如果发现网卡未连接，请点击网络连接的图标，点击Edit Connections,在弹出的界面选择你使用的网卡名，把自动连接的对勾点上即Connect automatically即可。<br><br><img src="https://i2.tiimg.com/709978/e7385d975d353c5f.png" alt=""><br><br>&emsp;&emsp;得到IP地址之后我们就可以使用相关的工具对系统进行远程访问常用的Windows下常用的工具由Xhell ，SecureCRT，Putty等工具，使用方法是输入IP地址，端口号，用户名和密码就可以正常连接，SSH服务端口号一般是22，当然也可以自己设定。Mac或者Linux 可以直接使用自带的终端工具进行连接，相应的命令是：用户名@IP:端口号，默认22号端口可以不输，会车之后输入密码便可以连接到相应的服务器，例如 <br><br>&emsp;&emsp;<a href="mailto:root@192.168.1.22">root@192.168.1.22</a><br></p><h2 id="（二）Linux常用命令介绍"><a href="#（二）Linux常用命令介绍" class="headerlink" title="（二）Linux常用命令介绍"></a>（二）Linux常用命令介绍</h2><p>&emsp;&emsp;1. 查看系统内核版本命令：uname -r ,其中3.10.0 就是内核版本号。<br><br><img src="https://i1.fuimg.com/709978/bf0d6b3331739768.png" alt=""><br><br>&emsp;&emsp;2.查看网卡级网络信息命令：ifconfig，eth0就代表你现在使用的网卡信息，其中0代表是系统中的第一块网卡。<br><br><img src="https://i2.tiimg.com/709978/ad69ed2882de4804.png" alt=""><br><br>&emsp;&emsp;3.进入某一个文件夹命令：cd /文件夹/。<br><br>&emsp;&emsp;4.查看发行系统的版本命令: cat /etc/ctntos-relase。<br><br><img src="https://i2.tiimg.com/709978/b6e964ff17b8a426.png" alt=""><br><br>&emsp;&emsp;5.查看系统总内存的大小：cat /proc/meminfo。<br><br><img src="https://i1.fuimg.com/709978/68a90822eff57171.png" alt=""><br><br>&emsp;&emsp;6.查看系统分区情况：ls /dev/sda<em>、fdisk -l或者lsblk，lsblk命令只能在系统安装完成才可以使用。<br><br><img src="https://i1.fuimg.com/709978/5d97c21c4b991822.png" alt=""><br><br>&emsp;&emsp;ls /dev/sda</em>命令窗口<br><br><img src="https://i1.fuimg.com/709978/7bbcfcb41cd362ee.png" alt=""><br><br>&emsp;&emsp;fdisk -l 命令窗口<br><br><img src="https://i1.fuimg.com/709978/bda630d28f2fafae.png" alt=""><br><br>&emsp;&emsp;lsblk命令窗口<br><br>&emsp;&emsp;7.关机命令：poweroff、halt、shutdown等命令。<br><br>&emsp;&emsp;8.查看安装rpm包的情况：rpm -qa | wc -l。<br><br><img src="https://i1.fuimg.com/709978/0768bc37f0f043d6.png" alt=""><br><br>&emsp;&emsp;9.查看内存使用情况命令: free。<br><br>&emsp;&emsp;10.查看system call（系统调用）命令：strace，查看library（库调用）：ltrace。</p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二、CentOS系列全新Linux系统安装及部署</title>
      <link href="/2020/02/21/%E4%BA%8C%E3%80%81CentOS%E7%B3%BB%E5%88%97%E5%85%A8%E6%96%B0Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E5%8F%8A%E9%83%A8%E7%BD%B2/"/>
      <url>/2020/02/21/%E4%BA%8C%E3%80%81CentOS%E7%B3%BB%E5%88%97%E5%85%A8%E6%96%B0Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E5%8F%8A%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）Linux系统主要文件夹介绍"><a href="#（一）Linux系统主要文件夹介绍" class="headerlink" title="（一）Linux系统主要文件夹介绍"></a>（一）Linux系统主要文件夹介绍</h2><ol><li>/usr = windows 和 program file 操作系统数据</li><li>/home = Windows系统的/Users 文件夹用于存放用户数据</li><li>/tmp 用于存放临时数据</li><li>/var 用于存放变化数据</li><li>/etc 相当于Windows注册表，用于存放Linux相关配置数据</li><li>/boot 启动相关文件</li><li>/dev 存放硬件设备的文件夹</li><li>linux 虚拟内存技术 swap，是一个独立分区，早期大小建议为内存的1.5-2倍，现在服务器内存普遍较大，不需要配置虚拟内存。</li><li>Linux硬盘 分区表示方法：从CentOS 6.X开始 /dev/sda,以sd开头，a,b,c…依次表示每一块硬盘。</li><li>CentOS 4.X CentOS 5.X 下不同接口的硬盘的表示方法：1）IDE /dev/hd/； 2)SCSI /dev/sd/； 3)STAT /dev/sd/； 4)SAS /dev/sd ； 5）/dev/vda/表示虚拟机。<h2 id="（二）CentOS-操作系统的安装"><a href="#（二）CentOS-操作系统的安装" class="headerlink" title="（二）CentOS 操作系统的安装"></a>（二）CentOS 操作系统的安装</h2>&emsp;&emsp;第一步，选择安装类型，必须在60秒之内做出选择，安装菜单的选项依次是安装和升级、用基本显卡安装、救援模式、用本地磁盘启动、内存检测，在这里因为我们是第一安装所以选择第一项全新安装，按回车开始安装。<br><br><img src="https://i2.tiimg.com/709978/dfc801486bed23b6.png" alt=""><br><br>&emsp;&emsp;第二步，是否进行光盘检测以保证安装包的完整性，这里我们建议大家进行安装包检测，以确保整个安装过程的顺利进行。<br><br><img src="https://i2.tiimg.com/709978/dba35538007bde51.png" alt=""><br><br>&emsp;&emsp;第三步，来到安装系统的启动页面，我们直接点击next便可开始安装。<br><br><img src="https://i2.tiimg.com/709978/2a435a0e896d00db.png" alt=""><br><br>&emsp;&emsp;第四步，选择操作系统的语音，这里不建议选择中文，因为作为开发人员而言最新的文档全是英文文档，选择中文不利于之后系统的维护，所以这里建议选择英文，点击next继续。<br><br><img src="https://i2.tiimg.com/709978/49cefc4597bc0ac6.png" alt=""><br><br>&emsp;&emsp;第五步，选择键盘布局，我们这里选择 U.S.English 英语键盘，英语键盘和我们日常使用的键盘布局是一致的，选择其他键盘有可能会使我们的键盘输入出现错误。<br><br><img src="https://i2.tiimg.com/709978/b0e1bec9dada5b8c.png" alt=""><br><br>&emsp;&emsp;第六步，安装设备类型，第一项是装在本机硬盘上也就是基本存储设备，第二项是远程存储，我们选择第一项。<br><br><img src="https://i2.tiimg.com/709978/0ce219016050c4d3.png" alt=""><br><br>&emsp;&emsp;第七步，硬盘选择，安装程序需要讲硬盘进行初始化，我们建议选择一个空白的分区，如果有数据请做好数据备份，初始化意味着删除所有数据。我们这里选择第一项删除所有数据并进行硬盘的初始化。<br><br><img src="https://i2.tiimg.com/709978/1c0da6e583d68891.png" alt=""><br><br>&emsp;&emsp;第八步，修改主机名，主机名由计算机名+域后缀组成，可自行进行修改。左下角的configure network，为计算机配置网络，我们这里可以不做配置，稍后在系统中也可以进行相关配置。但是在生产环境中的网络配置建议是静态IP，这样可以方便管理。<br><br><img src="https://i2.tiimg.com/709978/36b19155c1978a5c.png" alt=""><br><br>&emsp;&emsp;第九步，选择我们所在区域，直接在地图上选取即可，下面的system clock uses UTC 的对勾一定要去掉，否则计算及的默认时间会根据格林尼治时间来确定。<br><br><img src="https://i2.tiimg.com/709978/e10e7565224d76c9.png" alt=""><br><br>&emsp;&emsp;第十步，为root用户创建一个密码，root用户就相当于Windows系统的administrator。<br><br><img src="https://i1.fuimg.com/709978/60b5ce6c43bf4845.png" alt=""><br><br>&emsp;&emsp;第十一步，分区设置，我们这里不按照安装程序的默认分区策略，这里我们选择最后一个自定义分区策略。<br><br><img src="https://i2.tiimg.com/709978/a6ab87ee3eac4d94.png" alt=""><br><br>&emsp;&emsp;第十二步，我们可以按照自己的需要对硬盘进行分区，点击create便可以对硬盘进行相应的分区。<br><br><img src="https://i2.tiimg.com/709978/6b37d734f97b3f63.png" alt=""><br><br>&emsp;&emsp;第十三步，启动菜单选择，我们选择默认即可，当然你也可以进行相关编辑，我们这里直接点解next进入下一步。<br><br><img src="https://i2.tiimg.com/709978/ff374414e631383f.png" alt=""><br><br>&emsp;&emsp;第十四步，选择你需要安装的软件，这里一般选择第三个最小化安装，如果使初学者建议安装第一个或者第二个图形界面。点击next系统便正式开始安装，我们只需要耐心等待即可。<br><br><img src="https://i2.tiimg.com/709978/ed02071c42cf9111.png" alt=""><br><br>&emsp;&emsp;对于CentOS 7的安装就比CentOS 6要简单的多，在安装类型界面，就是很直接的install centos 7，直接回车就好，其他的设置方法和6就是大同小异，按照6的安装方法即可。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 企业运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一、Linux版本起源及安装</title>
      <link href="/2020/02/20/%E4%B8%80%E3%80%81Linux%E7%89%88%E6%9C%AC%E8%B5%B7%E6%BA%90%E5%8F%8A%E5%AE%89%E8%A3%85/"/>
      <url>/2020/02/20/%E4%B8%80%E3%80%81Linux%E7%89%88%E6%9C%AC%E8%B5%B7%E6%BA%90%E5%8F%8A%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）Linux发行版本"><a href="#（一）Linux发行版本" class="headerlink" title="（一）Linux发行版本"></a>（一）Linux发行版本</h2><p>&emsp;&emsp;slackware:  SUSE Linux Enterprise Server(SLES)<br><br>&emsp;&emsp;&emsp;&emsp;Open Suse桌面<br><br>&emsp;&emsp;&emsp;&emsp;debian：   ubuntu，mint<br><br>&emsp;&emsp;&emsp;&emsp;redhat：   RHEL：RedHat Enterprise Linux<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;每18个月发行一个新版本<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;CentOS：兼容RHEL的格式<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;中标麒麟：中标软件<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Fedora：每6个月发行一个新版本<br><br>&emsp;&emsp;&emsp;&emsp;ArchLinux：轻量简洁<br><br>&emsp;&emsp;&emsp;&emsp;Gentoo：极致性能，不提供传统意义的安装程序<br><br>&emsp;&emsp;&emsp;&emsp;LFS：Linux From scratch自制Linux<br><br>&emsp;&emsp;&emsp;&emsp;Android：kernel+busybox（工具集）+java虚拟机<br><br>&emsp;&emsp;&emsp;&emsp;Linux分支参考网站：<a href="http://futurist.se/gldt/" target="_blank" rel="noopener">http://futurist.se/gldt/</a><br></p><h3 id="Linux发行版的名称和版本号是由发行版的维护者决定的"><a href="#Linux发行版的名称和版本号是由发行版的维护者决定的" class="headerlink" title="Linux发行版的名称和版本号是由发行版的维护者决定的"></a>Linux发行版的名称和版本号是由发行版的维护者决定的</h3><p>&emsp;&emsp;RedHat Enterprise Linux 7.3<br><br>&emsp;&emsp;&emsp;&emsp;由RedHat公司发布<br><br>&emsp;&emsp;SUSE Linux Enterprise Server 12 SP2<br><br>&emsp;&emsp;&emsp;&emsp;由Novell公司发布<br><br>&emsp;&emsp;Debian Linux 9<br><br>&emsp;&emsp;&emsp;&emsp;由Debian维护社区发布<br><br>&emsp;&emsp;Android8．0<br><br>&emsp;&emsp;&emsp;&emsp;由Goog|e公司发布<br><br><img src="https://i1.fuimg.com/709978/b387ee3eb70a297a.png" alt=""></p><h3 id="Linux-内核"><a href="#Linux-内核" class="headerlink" title="Linux 内核"></a>Linux 内核</h3><p>&emsp;&emsp;Linux的内核版本由3部分组成                        </p><ul><li>主版本号</li><li>次版本号</li><li>末版本号</li><li>编译版本号</li><li>厂商版本<br><img src="https://i2.tiimg.com/709978/772103e7ff422d06.png" alt=""><h3 id="（二）在Windows系统上利用VMware-workstation-安装Linux-虚拟机"><a href="#（二）在Windows系统上利用VMware-workstation-安装Linux-虚拟机" class="headerlink" title="（二）在Windows系统上利用VMware workstation 安装Linux 虚拟机"></a>（二）在Windows系统上利用VMware workstation 安装Linux 虚拟机</h3></li></ul><p><strong>&emsp;&emsp;第一步，打开新建虚拟机向导，在这里我们选择典型配置。</strong><br><br><img src="https://i2.tiimg.com/709978/dc41b21266ae87c2.png" alt=""><br><br><strong>&emsp;&emsp;第二步，在安装来源这里我们选择稍后安装操作系统，如果选择了安装程序光盘映像文件就会执行默认的安装，不能进行自定义设置。</strong><br><br><img src="https://i2.tiimg.com/709978/de8ed58fdac91fdf.png" alt=""><br><br><strong>&emsp;&emsp;第三步，在选择操作系统这里，我们根据我们的安装类型来选择相应的操作系统，我们这里安装的是CentOS 64位的操作系统，你也可以根据自己的实际情况来选择相应的操作系统。</strong><br><br><img src="https://i2.tiimg.com/709978/f44d014729d39d41.png" alt=""><br><br><strong>&emsp;&emsp;第四步，我们要选择虚拟机的最大磁盘大小，我们这里将默认的20GB改成200GB，这里的磁盘大小并不是电脑的磁盘大小，我们可以随意设置，但是磁盘大小不能太小，否则如果之后虚拟机上的数据太多，会很难操作。这里我们建议将虚拟磁盘大小存储为单个文件，如果分为多个文件会导致形成的磁盘文件太多不利于管理。</strong><br><br><img src="https://i2.tiimg.com/709978/f95e0ec77f84cd93.png" alt=""><br><br><strong>&emsp;&emsp;第五步，我们可以根据我们的需要来设置虚拟机的一些硬件信息。在CD/DVD（IDE）这里我们需要把地址指向我们安装镜像的位置。在网络这里可以根据自己的实际情况进行设置，如果虚拟机不需要连接除本机意外的计算机我们在网络这里就选择仅主机模式，如果虚拟机需要连接其他计算机设备我们可以设置成桥接模式，其他硬件选择均可以根据自己的实际情况来进行选择。</strong><br><br><img src="https://i2.tiimg.com/709978/a8f70a0ce9326bcf.png" alt=""><br><br><br><em>Linux所有的系统均可以在阿里巴巴官方镜像站下载：<a href="https://opsx.alibaba.com" target="_blank" rel="noopener">https://opsx.alibaba.com</a></em></p>]]></content>
      
      
      <categories>
          
          <category> Linux企业运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 系统安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一、计算机基础入门、硬件和系统组成</title>
      <link href="/2019/07/14/%E4%B8%80%E3%80%81%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E3%80%81%E7%A1%AC%E4%BB%B6%E5%92%8C%E7%B3%BB%E7%BB%9F%E7%BB%84%E6%88%90/"/>
      <url>/2019/07/14/%E4%B8%80%E3%80%81%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E3%80%81%E7%A1%AC%E4%BB%B6%E5%92%8C%E7%B3%BB%E7%BB%9F%E7%BB%84%E6%88%90/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）计算机系统的组成"><a href="#（一）计算机系统的组成" class="headerlink" title="（一）计算机系统的组成"></a>（一）计算机系统的组成</h2><h3 id="emsp-emsp-1-计算机系统由硬件-Hardware-系统和软件-Software-系统两大系统组成"><a href="#emsp-emsp-1-计算机系统由硬件-Hardware-系统和软件-Software-系统两大系统组成" class="headerlink" title="&emsp;&emsp;1.计算机系统由硬件(Hardware)系统和软件(Software)系统两大系统组成"></a>&emsp;&emsp;1.计算机系统由硬件(Hardware)系统和软件(Software)系统两大系统组成</h3><p><img src="https://i1.fuimg.com/709978/cd03db4976c90302.png" alt="计算机系统的组成"></p><h3 id="emsp-emsp-2-冯-诺伊曼体系结构：1946年数学家冯-诺伊曼提出"><a href="#emsp-emsp-2-冯-诺伊曼体系结构：1946年数学家冯-诺伊曼提出" class="headerlink" title="&emsp;&emsp;2.冯.诺伊曼体系结构：1946年数学家冯.诺伊曼提出"></a>&emsp;&emsp;2.冯.诺伊曼体系结构：1946年数学家冯.诺伊曼提出</h3><p>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<strong>运算器、控制器、存储器、输入设备、输出设备</strong> <br><br><img src="https://i1.fuimg.com/709978/a2235d1ee9c85ac0.png" alt="冯.诺伊曼体系结构"></p><h2 id="（二）计算机的存储单位介绍"><a href="#（二）计算机的存储单位介绍" class="headerlink" title="（二）计算机的存储单位介绍"></a>（二）计算机的存储单位介绍</h2><h3 id="emsp-emsp-1-定义"><a href="#emsp-emsp-1-定义" class="headerlink" title="&emsp;&emsp;1.定义"></a>&emsp;&emsp;1.定义</h3><p>&emsp;&emsp;&emsp;&emsp;二进制序列用以表示计算机、电子信息数据容量的量纲，基本单位为字节B，字节向上分别为KB、MB、GB、TB，每级为前一级的1024倍，比如1KB=1024B，1M=1024KB。</p><h3 id="emsp-emsp-2-单位换算"><a href="#emsp-emsp-2-单位换算" class="headerlink" title="&emsp;&emsp;2.单位换算"></a>&emsp;&emsp;2.单位换算</h3><p>&emsp;&emsp;&emsp;&emsp;计算机存储单位一般用bit、B、KB、MB、GB、TB、PB、EB、ZB、YB、BB、NB、DB……来表示，它们之间的关系是：<br></p><ul><li>1 Byte（B） = 8 bit</li><li>1 Kilo Byte（KB） = 1024B</li><li>1 Mega Byte（MB） = 1024 KB</li><li>1 Giga Byte （GB）= 1024 MB</li><li>1 Tera Byte（TB）= 1024 GB</li><li>1 Peta Byte（PB） = 1024 TB</li><li>1 Exa Byte（EB） = 1024 PB</li><li>1 Zetta Byte（ZB） = 1024 EB</li><li>1Yotta Byte（YB）= 1024 ZB</li><li>1 Bronto Byte（BB） = 1024 YB</li><li>1Nona Byte（NB）=1024 BB</li><li>1 Dogga Byte（DB）=1024 NB</li><li>1 Corydon Byte（CB）=1024DB</li><li>1 Xero Byte （XB）=1024CB</li></ul><h2 id="（三）计算机的分类"><a href="#（三）计算机的分类" class="headerlink" title="（三）计算机的分类"></a>（三）计算机的分类</h2><p>&emsp;&emsp;<strong>巨型计算机：</strong> 应用于国防尖端技术和现代科学计算中。巨型机的运算速度可达每秒百万亿次以上，“天河一号”为我国首台千万亿次超级计算机<br><br>&emsp;&emsp;<strong>大型计算机：</strong> 具有较高的运算速度每秒可以执行几千万条指令，而且有较大的存储空间。往往用于科学计算、数据处理或作为网络服务器使用，如：IBM、Z13 mainframe<br><br>&emsp;&emsp;<strong>小型计算机：</strong> 规模较小、结构简单、运行环境要求较低，一般应用于工业自动控制、测量仪器、医疗设备中的数据采集等方面<br><br>&emsp;&emsp;<strong>微型计算机：</strong> 中央处理器（CPU）采用微处理器芯片，体积小巧轻便，广泛用于商业、服务业、工厂的自动控制、办公自动化以及大众化的信息处理<br></p><h2 id="（四）服务器"><a href="#（四）服务器" class="headerlink" title="（四）服务器"></a>（四）服务器</h2><p>&emsp;&emsp;<strong>服务器Server</strong>是计算机的一种，是网络中为客户端计算机提供各种服务的高性能的计算机，服务器在网络操作系统的控制下，将与其相连的硬盘、磁带、打印机及昂贵的专用通讯设备提供给网络上的客户站点共享，也能为网络用户提供集中计算、信息发布及数据管理等服务<br><br>&emsp;&emsp;<strong>服务器按应用功能可分为：</strong> <br><br>&emsp;&emsp;web服务器、数据库服务、文件服务器、中间件应用服务器、日志服务器、监控服器，程序版本控制服务器、虚拟机服务器、邮件服务器、打印服务器、域控制服务器、多媒体服务器、通讯服务器、ERP服务器等<br>&emsp;&emsp;<strong>服务器按外形分类：</strong><br><br>&emsp;&emsp;塔式服务器、机架式服务器、刀片式服务器</p>]]></content>
      
      
      <categories>
          
          <category> 服务器相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二、服务器的分类、CPU、硬盘和系统</title>
      <link href="/2019/07/14/%E4%BA%8C%E3%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%88%86%E7%B1%BB%E3%80%81CPU%E3%80%81%E7%A1%AC%E7%9B%98%E5%92%8C%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/07/14/%E4%BA%8C%E3%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%88%86%E7%B1%BB%E3%80%81CPU%E3%80%81%E7%A1%AC%E7%9B%98%E5%92%8C%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="（一）服务器的分类"><a href="#（一）服务器的分类" class="headerlink" title="（一）服务器的分类"></a>（一）服务器的分类</h2><p>&emsp;&emsp;<strong>按照CPU体系架构来区分，服务器主要分为两类：</strong> <br><br>&emsp;&emsp;<strong>非x86服务器：</strong> 使用RISC（精简指令集）或EPIC（并行指令代码）处理器，并且主要采用UNIX和其它专用操作系统的服务器，指令系统相对简单，它只要求硬件执行很有限且最常用的那部分执令，CPU主要有Compaq的AIpha、HP的PA-RISC、IBM的PowerPC、MIPS的MIPS和SUN的Sparc、lntel研发的EPIC安腾处理器等。这种服务器价格昂贵，体系封闭，但是稳定性好性能强，主要用在全融、电信等大型企业的核心系统<br><br>&emsp;&emsp;<strong>x86服务器：</strong> RUCISC（复杂指令集）架构服务器，即通常所讲的PC服务器，它是基于PC机体系结构，使用Intel或其它兼容x86指令集的处理器芯片的服务器。目前主要为intel的Xeon E3，E5，E7系列，价格相对便宜、兼容性好、稳定性较差、安全性不算太高<br><br>&emsp;&emsp;<strong>按CPU核心数：</strong> 可以分为4路CPU（企业级服务器），2路CPU，1路CPU（入门级服务器）。</p><h2 id="（二）服务器的硬件"><a href="#（二）服务器的硬件" class="headerlink" title="（二）服务器的硬件"></a>（二）服务器的硬件</h2><h3 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h3><p>&emsp;&emsp;<strong>容量：</strong> 即该内存的存储容量，单位一般为“M或”GB’<br><br>&emsp;&emsp;<strong>内存带宽：</strong><br></p><ul><li>内存带宽是指内存与桥芯片之间的数据传输率</li><li>单通道内存节制器一般都是64-bit的，8个二进制位相当于1个字节，换算成字节是64/8=8，再乘以内存的运行频率，如果是DDR内存就要再乘以2</li><li>计算公式：<br><br>&emsp;&emsp;内存带宽=内存总线频率x数据总线位数/8<br><br>&emsp;&emsp;<strong>示例：</strong>DDR内存带宽计算<br><br>&emsp;&emsp;DDR2 667，运行频率为333MHz，带宽为333×2×64/8=5400MB/s=5.4GB/s<br><br>&emsp;&emsp;DDR2 800，运行频率为400MHz，带宽为400×2×64/8=6400MB/s=6.4GB/s<br></li></ul><p><strong>在线备用内存技术</strong> <br></p><ul><li>当主内存或者是扩展内存中的内存出现多位错误时或者出现物理内存故障时，服务器仍继续运行</li><li>由备用内存接替出现故障内存的工作</li><li>备用的内存区域必须比其它区域的内存容量要大或相同<br></li></ul><p><strong>内存镜像</strong> <br></p><ul><li>多镜像为系统在出现多位错或内存物理故障时提供数据保护功能，以保证系统仍能正常的运行</li><li>数据同时写入两个镜像的内存区域</li><li>从一个区域进行数据的读取<br><br><img src="https://i1.fuimg.com/709978/14588dc57d1d3a3e.png" alt=""><h3 id="硬盘"><a href="#硬盘" class="headerlink" title="硬盘"></a>硬盘</h3>&emsp;&emsp;<strong>机械硬盘结构：</strong> <br><br>&emsp;&emsp;存储介质（Media）——盘片<br><br>盘片的基板是全属或玻璃材质制成，为达到高密度高稳定的质量，基板要求表面光滑平整，不可有任何暇疵<br><br>&emsp;&emsp;读写头（Read Write Head），——磁头<br><br>磁头是硬盘读取数据的关键部件，它的主要作用就是将存储在硬盘盘片上的磁信息转化为电信号向外传输<br><br>&emsp;&emsp;马达（Spindle Motor &amp; Voice Coil Motor）<br><br>马达上装有一至多片盘片，以7200，10000，15000RPM等定速旋转，为保持其平衡不可抖动，所以其质量要求严谨，不产生高温躁音<br><br>&emsp;&emsp;<strong>硬盘基本参数：</strong> <br><br>&emsp;&emsp;容量：<br><br>&emsp;&emsp;&emsp;&emsp;容量是硬盘最主要的参数。单位有MB、GB、TB<br><br>&emsp;&emsp;转速<br><br>&emsp;&emsp;&emsp;&emsp;转速是指硬盘盘片每分钟转动的圈数，单位为rpm。现在硬盘的转速已经达到10000rpm，15000rpm<br><br>&emsp;&emsp;传输速率<br><br>&emsp;&emsp;&emsp;&emsp;传输速率(Data Transfer Rate)。硬盘的数据传输率是指硬盘读写数据的速度，单位为兆字节每秒（MB/s）<br><br>&emsp;&emsp;缓存<br><br>&emsp;&emsp;&emsp;&emsp;硬盘缓存的目的是为了解决系统前后级读写速度不匹配的问题，以提高硬盘的读写速度<br><br>&emsp;&emsp;<strong>硬盘接口类型</strong> <br><br>&emsp;&emsp;&emsp;&emsp;IDE接口：硬盘接口规范，采用ATA技术规范<br><br>&emsp;&emsp;&emsp;&emsp;SCSI接口：应用于小型机上的高速数据传输技术<br><br>&emsp;&emsp;&emsp;&emsp;SATA接口：SerialATA，提高传输速率，支持热插拔<br><br>&emsp;&emsp;&emsp;&emsp;SAS接口：Serial Attached SCSI兼容SATA<br><br>&emsp;&emsp;&emsp;&emsp;目前主流的硬盘接口为SATA和SAS接口<br><h2 id="阵列卡"><a href="#阵列卡" class="headerlink" title="阵列卡"></a>阵列卡</h2>&emsp;&emsp;Raid卡：<br><br>&emsp;&emsp;&emsp;&emsp;用来实现RAID的建立和重建检测和修复多位错误，错误磁盘自动检测等功能。RAID芯片使CPU的资源得以释放<br><br>&emsp;&emsp;阵列卡（RAID卡）的作用<br><br>&emsp;&emsp;&emsp;&emsp;阵列卡把若干硬盘驱动器按照一定要求组成一个整体、由阵列控制器管理的系统。<br><br>&emsp;&emsp;&emsp;&emsp;阵列卡用来提高磁盘子系统的性能及可靠性<br><br>&emsp;&emsp;阵列卡参数<br><br>&emsp;&emsp;&emsp;&emsp;支持的RA|D级别<br><br>&emsp;&emsp;&emsp;&emsp;阵列卡缓存<br><br>&emsp;&emsp;&emsp;&emsp;电池保护<br><br><img src="https://i2.tiimg.com/709978/f4428376791ef158.png" alt=""><h3 id="电源和风扇"><a href="#电源和风扇" class="headerlink" title="电源和风扇"></a>电源和风扇</h3>&emsp;&emsp;&emsp;&emsp;支持服务器的电力负载<br><br>&emsp;&emsp;&emsp;&emsp;支持冗余，防止电源故障<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;故障预警和防止<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;故障之前的预防性维护<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;保证服务器持续运行<br><br>&emsp;&emsp;&emsp;&emsp;电源子系统包括<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;智能电源和风扇<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;冗余电源和风扇<br><br><img src="https://i1.fuimg.com/709978/6190b2a20c5354ea.png" alt=""><h3 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h3>&emsp;&emsp;&emsp;&emsp;服务器都在主板上集成了显卡，但是显存容量不高，一般为16M或32M<br><br>&emsp;&emsp;&emsp;&emsp;GPU：Graphic Processing Unit，即“图形处理器”<br><br><img src="https://i1.fuimg.com/709978/2447a5021e8a972b.png" alt=""><h3 id="网卡"><a href="#网卡" class="headerlink" title="网卡"></a>网卡</h3>&emsp;&emsp;&emsp;&emsp;服务器都在主板上集成了网卡，传输速率为1Gbps，即千兆网卡。<br><br>&emsp;&emsp;&emsp;&emsp;特殊应用需要高端网卡，如光纤网卡，lnfiniband网卡等，传输速率能达到10Gbps、20Gbps，即万兆网卡<br><br><img src="https://i2.tiimg.com/709978/054f5432e4a40929.png" alt=""><h3 id="热插拔技术"><a href="#热插拔技术" class="headerlink" title="热插拔技术"></a>热插拔技术</h3>&emsp;&emsp;&emsp;&emsp;称为热交换技术(Hot swap），允许在不关机的状态下更换故障热插拔设备<br><br>&emsp;&emsp;&emsp;&emsp;常见的热插拔设备：硬盘，电源，设备，风扇等<br><br>&emsp;&emsp;&emsp;&emsp;热插拔硬盘技术与RAID技术配合起来，可以使服务器在不关机的状态下恢复故障硬盘上的数据，同时并不<br>影响网络用户对数据的使用<br><br><img src="https://i2.tiimg.com/709978/6ab1cd905b43b0da.png" alt=""><h3 id="机柜"><a href="#机柜" class="headerlink" title="机柜"></a>机柜</h3>&emsp;&emsp;&emsp;&emsp;机架式服务器-服器放置在机柜中。通常使用的机柜42U（约2米高）机柜（1U=44.45mm）<br><br><img src="https://i2.tiimg.com/709978/280ba374d77da0d8.png" alt=""><h2 id="（三）存储基础知识"><a href="#（三）存储基础知识" class="headerlink" title="（三）存储基础知识"></a>（三）存储基础知识</h2><h3 id="存储网络"><a href="#存储网络" class="headerlink" title="存储网络"></a>存储网络</h3>&emsp;&emsp;&emsp;&emsp;用于存放数据信息的设备和介质，是计算机系统的外部存储，数据可安全存放，长期驻留<br>传统的存储：<br><br><img src="https://i2.tiimg.com/709978/47ae9b45b142874e.png" alt=""><h3 id="磁盘阵列："><a href="#磁盘阵列：" class="headerlink" title="磁盘阵列："></a>磁盘阵列：</h3><img src="https://i1.fuimg.com/709978/ddd10be953bb16ce.png" alt=""><h3 id="存储网络："><a href="#存储网络：" class="headerlink" title="存储网络："></a>存储网络：</h3>&emsp;&emsp;&emsp;&emsp;DAS——直接连接存储(Direct Attached Storage)<br><br>&emsp;&emsp;&emsp;&emsp;NAS——网络连接存储(Network Attached Storage)<br><br>&emsp;&emsp;&emsp;&emsp;SAN——存储区域网络(Storage Area Networks)<br><br>&emsp;&emsp;&emsp;&emsp;DAS：<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;直接存储(Direct Attached storage)。存储设备与主机的紧密相连<br><br><img src="https://i1.fuimg.com/709978/225ca9ac603b6bc9.png" alt=""><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;管理成本较低，实施简单<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;储时直接依附在服务器上，因此存储共享受到限制<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;CPU必须同时完成磁盘存取和应用运行的双重任务，所以不利于CPU的指令周期的优化，增加系统负担<br><br>&emsp;&emsp;&emsp;&emsp;NAS：<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;网络连接存储(Network Attached Storage)：<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;通过局域网在多个文件服务器之间实现了互联，基于文件的协议（NFS、SMB/CIFS），实现文件共享<br><br><img src="https://i1.fuimg.com/709978/7ebbe9d8ee402e6b.png" alt=""><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;集中管理数据，从而释放带宽、提高性能<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;可提供跨平台文共享功能<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;可靠性较差，适用于局域网或较小的网络<br><br>&emsp;&emsp;&emsp;&emsp;SAN：<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;存储区域网络(Storage Area Networks，SAN)<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;利用高速的光纤网络链接服务器与存储设备，基于SCSI，IP，ATM等多种高级协议，实现存储共享<br><br><img src="https://i1.fuimg.com/709978/c2ec2253981aaa94.png" alt=""><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;服务器跟储存装置两者各司其职<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;利用光纤信道来传输数据．以达到一个服务器与储存装置之间多对多的高效能、高稳定度的存储环境<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;实施复杂，管理成本高<br><h2 id="四、操作系统"><a href="#四、操作系统" class="headerlink" title="四、操作系统"></a>四、操作系统</h2>&emsp;&emsp;<strong>OS：Operating System，通用目的的软件程序</strong> <br><br>&emsp;&emsp;&emsp;&emsp;硬件驱动<br><br>&emsp;&emsp;&emsp;&emsp;进程管理<br><br>&emsp;&emsp;&emsp;&emsp;内存管理<br><br>&emsp;&emsp;&emsp;&emsp;网络管理<br><br>&emsp;&emsp;&emsp;&emsp;安全管理<br><br>&emsp;&emsp;&emsp;&emsp;文件管理<br><br>&emsp;&emsp;<strong>OS分类:</strong><br><br>&emsp;&emsp;&emsp;&emsp;服务器OS：RHEL, CentOS, WindowsServer, AlX<br><br>&emsp;&emsp;&emsp;&emsp;桌面OS：Windows10,Windows7,MacOS，Fedora<br><br>&emsp;&emsp;&emsp;&emsp;移动设备OS：Andriod, IOS, YunOS<br><br>&emsp;&emsp;&emsp;&emsp;Windows：<br><br>&emsp;&emsp;&emsp;&emsp;Linux：GNU/Linux<br><br>&emsp;&emsp;&emsp;&emsp;Unix：1969年Ken Thompson<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;System: Bell Lab<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;AIX(IBM)<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;SOlaris(SUN)<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;HP-UX(HP)<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;BSD:（BSRG）Berkeley System Distribution<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;NetBSD<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;OpenBSD<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;FreeBSD<br><h2 id="五、开发接口标准"><a href="#五、开发接口标准" class="headerlink" title="五、开发接口标准"></a>五、开发接口标准</h2>&emsp;&emsp;<strong>ABI: Application Binary Interface</strong><br><br>&emsp;&emsp;&emsp;&emsp;ABI描述了应用程序与OS之间的底层接口，允许编译好的目标代码在使用蒹容ABI的系统中无需改动就能运行<br><br>&emsp;&emsp;<strong>API：Application Programming Interface</strong><br><br>&emsp;&emsp;&emsp;&emsp;API定义了源代码和库之间的接口，因此同样的源代码可以在支持这个API的任何系统中编译<br><br>&emsp;&emsp;<strong>POSIX：Portable Operating System Interface</strong><br><br>&emsp;&emsp;&emsp;&emsp;IEEE在操作系统上定义的一系列API标准<br><br>&emsp;&emsp;&emsp;&emsp;POSIX兼容的程序可在其它POSIX操作系统编译执行<br><br>&emsp;&emsp;<strong>运行程序格式：</strong><br><br>&emsp;&emsp;&emsp;&emsp;Windows: EXE，.dll(dynamic link library)，lib<br><br>&emsp;&emsp;&emsp;&emsp;Linux：ELF，.so(shared object)，.a<br><h2 id="六、用户和内核空间"><a href="#六、用户和内核空间" class="headerlink" title="六、用户和内核空间"></a>六、用户和内核空间</h2>&emsp;&emsp;<strong>用户空间：User space</strong><br><br>&emsp;&emsp;&emsp;&emsp;用户程序的运行空间。为了安全，它们是隔离的，即使用户的程序崩溃，内核也不受影响<br><br>&emsp;&emsp;只能执行简单的运算，不能直接调用系统资源，必须通过系统接口（system call），才能向内核发出指令<br><br>&emsp;&emsp;<strong>内核空间：Kernel space</strong><br><br>&emsp;&emsp;&emsp;&emsp;是Linux内核的运行空间<br><br>&emsp;&emsp;&emsp;&emsp;可以执行任意命令，调用系统的一切资源<br><br>&emsp;&emsp;<strong>示例：</strong><br><br>&emsp;&emsp;&emsp;&emsp;str=“<a href="http://www.magedu.com”" target="_blank" rel="noopener">www.magedu.com”</a>        //用户空间<br><br>&emsp;&emsp;&emsp;&emsp;x=x+100             //用户空间<br><br>&emsp;&emsp;&emsp;&emsp;file.write(str)          //切换到内核空间<br><br>&emsp;&emsp;&emsp;&emsp;y=x+200             //切换到用户空间<br><br>&emsp;&emsp;&emsp;&emsp;第一行和第二行都是简单的賦值运算，在User space执行。第三行需要写入文件，就要切换到Kernel space，因为用户不能直接写文件，必须通过内核安排。第四行又是值运算，就切换回User space<br><br><img src="https://i2.tiimg.com/709978/7d3bb5a5b00461f3.png" alt=""><h2 id="七、编程语言"><a href="#七、编程语言" class="headerlink" title="七、编程语言"></a>七、编程语言</h2>&emsp;&emsp;<strong>低级语言</strong><br><br>&emsp;&emsp;&emsp;&emsp;机器语言：0和1<br><br>&emsp;&emsp;&emsp;&emsp;汇编浯言：和机器语言——对应，与硬件相关的特有代码、驱动程序开发<br><br>&emsp;&emsp;<strong>中级语言：C</strong> <br><br>&emsp;&emsp;&emsp;&emsp;系统级应用、驱动程序<br><br>&emsp;&emsp;<strong>高级语言：</strong><br><br>&emsp;&emsp;&emsp;&emsp;Java，ObJective-C，C#，python，php，go，应用级程序开发<br></li></ul>]]></content>
      
      
      <categories>
          
          <category> 服务器相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> CPU </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
